{"version":3,"sources":["turbopack:///[next]/internal/font/google/sarabun_d948e850.module.css [app-rsc] (css module)","turbopack:///[project]/node_modules/next-runtime-env/build/provider/env-provider.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/next/src/lib/constants.ts","turbopack:///[project]/node_modules/next/src/server/lib/clone-response.ts","turbopack:///[project]/node_modules/next/src/server/lib/dedupe-fetch.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/types.ts","turbopack:///[project]/node_modules/next/src/lib/batcher.ts","turbopack:///[project]/node_modules/next/src/server/request-meta.ts","turbopack:///[project]/node_modules/next/src/server/web/utils.ts","turbopack:///[project]/node_modules/next/src/shared/lib/i18n/detect-domain-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/remove-trailing-slash.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/parse-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-suffix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/path-has-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/format-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/shared/lib/get-hostname.ts","turbopack:///[project]/node_modules/next/src/shared/lib/i18n/normalize-locale-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/remove-path-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/server/web/next-url.ts","turbopack:///[project]/node_modules/next/src/server/web/error.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/cookies.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/request.ts","turbopack:///[project]/node_modules/next/src/server/base-http/helpers.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/adapters/next-request.ts","turbopack:///[project]/node_modules/next/src/server/client-component-renderer-logger.ts","turbopack:///[project]/node_modules/next/src/server/pipe-readable.ts","turbopack:///[project]/node_modules/next/src/server/render-result.ts","turbopack:///[project]/node_modules/next/src/server/route-kind.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/utils.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/index.ts","turbopack:///[project]/node_modules/next/src/server/lib/patch-fetch.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/unstable-cache.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/sorted-routes.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/interception-routes.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/is-dynamic.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/index.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/revalidate.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/unstable-no-store.ts","turbopack:///[project]/node_modules/next/src/server/use-cache/cache-life.ts","turbopack:///[project]/node_modules/next/src/server/use-cache/cache-tag.ts","turbopack:///[project]/node_modules/next/cache.js","turbopack:///[project]/node_modules/next-runtime-env/build/provider/use-env-context.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/next/src/client/script.tsx","turbopack:///[project]/node_modules/next/script.js","turbopack:///[project]/src/app/provider.jsx/__nextjs-internal-proxy.mjs","turbopack:///[next]/internal/font/google/sarabun_d948e850.js","turbopack:///[project]/src/app/layout.jsx"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"sarabun_d948e850-module__vYK2qq__className\",\n});\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next-runtime-env/build/provider/env-provider.js\"));\n","import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","const noop = () => {}\n\nlet registry: FinalizationRegistry<WeakRef<ReadableStream>> | undefined\n\nif (globalThis.FinalizationRegistry) {\n  registry = new FinalizationRegistry((weakRef: WeakRef<ReadableStream>) => {\n    const stream = weakRef.deref()\n    if (stream && !stream.locked) {\n      stream.cancel('Response object has been garbage collected').then(noop)\n    }\n  })\n}\n\n/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */\nexport function cloneResponse(original: Response): [Response, Response] {\n  // If the response has no body, then we can just return the original response\n  // twice because it's immutable.\n  if (!original.body) {\n    return [original, original]\n  }\n\n  const [body1, body2] = original.body.tee()\n\n  const cloned1 = new Response(body1, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned1, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  // The Fetch Standard allows users to skip consuming the response body by\n  // relying on garbage collection to release connection resources.\n  // https://github.com/nodejs/undici?tab=readme-ov-file#garbage-collection\n  //\n  // To cancel the stream you then need to cancel both resulting branches.\n  // Teeing a stream will generally lock it for the duration, preventing other\n  // readers from locking it.\n  // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n\n  // cloned2 is stored in a react cache and cloned for subsequent requests.\n  // It is the original request, and is is garbage collected by a\n  // FinalizationRegistry in Undici, but since we're tee-ing the stream\n  // ourselves, we need to cancel clone1's stream (the response returned from\n  // our dedupe fetch) when clone1 is reclaimed, otherwise we leak memory.\n  if (registry && cloned1.body) {\n    registry.register(cloned1, new WeakRef(cloned1.body))\n  }\n\n  const cloned2 = new Response(body2, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned2, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  return [cloned1, cloned2]\n}\n","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */\nimport * as React from 'react'\nimport { cloneResponse } from './clone-response'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n\nfunction generateCacheKey(request: Request): string {\n  // We pick the fields that goes into the key used to dedupe requests.\n  // We don't include the `cache` field, because we end up using whatever\n  // caching resulted from the first request.\n  // Notably we currently don't consider non-standard (or future) options.\n  // This might not be safe. TODO: warn for non-standard extensions differing.\n  // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n  return JSON.stringify([\n    request.method,\n    Array.from(request.headers.entries()),\n    request.mode,\n    request.redirect,\n    request.credentials,\n    request.referrer,\n    request.referrerPolicy,\n    request.integrity,\n  ])\n}\n\ntype CacheEntry = [\n  key: string,\n  promise: Promise<Response>,\n  response: Response | null,\n]\n\nexport function createDedupeFetch(originalFetch: typeof fetch) {\n  const getCacheEntries = React.cache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url: string): CacheEntry[] => []\n  )\n\n  return function dedupeFetch(\n    resource: URL | RequestInfo,\n    options?: RequestInit\n  ): Promise<Response> {\n    if (options && options.signal) {\n      // If we're passed a signal, then we assume that\n      // someone else controls the lifetime of this object and opts out of\n      // caching. It's effectively the opt-out mechanism.\n      // Ideally we should be able to check this on the Request but\n      // it always gets initialized with its own signal so we don't\n      // know if it's supposed to override - unless we also override the\n      // Request constructor.\n      return originalFetch(resource, options)\n    }\n    // Normalize the Request\n    let url: string\n    let cacheKey: string\n    if (typeof resource === 'string' && !options) {\n      // Fast path.\n      cacheKey = simpleCacheKey\n      url = resource\n    } else {\n      // Normalize the request.\n      // if resource is not a string or a URL (its an instance of Request)\n      // then do not instantiate a new Request but instead\n      // reuse the request as to not disturb the body in the event it's a ReadableStream.\n      const request =\n        typeof resource === 'string' || resource instanceof URL\n          ? new Request(resource, options)\n          : resource\n      if (\n        (request.method !== 'GET' && request.method !== 'HEAD') ||\n        request.keepalive\n      ) {\n        // We currently don't dedupe requests that might have side-effects. Those\n        // have to be explicitly cached. We assume that the request doesn't have a\n        // body if it's GET or HEAD.\n        // keepalive gets treated the same as if you passed a custom cache signal.\n        return originalFetch(resource, options)\n      }\n      cacheKey = generateCacheKey(request)\n      url = request.url\n    }\n\n    const cacheEntries = getCacheEntries(url)\n    for (let i = 0, j = cacheEntries.length; i < j; i += 1) {\n      const [key, promise] = cacheEntries[i]\n      if (key === cacheKey) {\n        return promise.then(() => {\n          const response = cacheEntries[i][2]\n          if (!response) throw new InvariantError('No cached response')\n\n          // We're cloning the response using this utility because there exists\n          // a bug in the undici library around response cloning. See the\n          // following pull request for more details:\n          // https://github.com/vercel/next.js/pull/73274\n          const [cloned1, cloned2] = cloneResponse(response)\n          cacheEntries[i][2] = cloned2\n          return cloned1\n        })\n      }\n    }\n\n    // We pass the original arguments here in case normalizing the Request\n    // doesn't include all the options in this environment.\n    const promise = originalFetch(resource, options)\n    const entry: CacheEntry = [cacheKey, promise, null]\n    cacheEntries.push(entry)\n\n    return promise.then((response) => {\n      // We're cloning the response using this utility because there exists\n      // a bug in the undici library around response cloning. See the\n      // following pull request for more details:\n      // https://github.com/vercel/next.js/pull/73274\n      const [cloned1, cloned2] = cloneResponse(response)\n      entry[2] = cloned2\n      return cloned1\n    })\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The relative project dir the server is running in from project root\n   */\n  relativeProjectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n\n  /**\n   * DEV only: The fallback params that should be used when validating prerenders during dev\n   */\n  devValidatingFallbackParams?: Map<string, string>\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","export {\n  RequestCookies,\n  ResponseCookies,\n  stringifyCookie,\n} from 'next/dist/compiled/@edge-runtime/cookies'\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  /** @internal */\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport type {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  TEXT_PLAIN_CONTENT_TYPE_HEADER,\n} from '../lib/constants'\nimport type { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\ntype ContentTypeOption =\n  | typeof RSC_CONTENT_TYPE_HEADER // For App Page RSC responses\n  | typeof HTML_CONTENT_TYPE_HEADER // For App Page, Pages HTML responses\n  | typeof JSON_CONTENT_TYPE_HEADER // For API routes, Next.js data requests\n  | typeof TEXT_PLAIN_CONTENT_TYPE_HEADER // For simplified errors\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType: ContentTypeOption | null\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption | null\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */\n  public static readonly EMPTY = new RenderResult<StaticRenderResultMetadata>(\n    null,\n    { metadata: {}, contentType: null }\n  )\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(\n    value: string | Buffer,\n    contentType: ContentTypeOption\n  ) {\n    return new RenderResult<StaticRenderResultMetadata>(value, {\n      metadata: {},\n      contentType,\n    })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      // If the response is null, return an empty string. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return ''\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new InvariantError(\n          'dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns a readable stream of the response.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return new ReadableStream<Uint8Array>({\n        start(controller) {\n          controller.close()\n        },\n      })\n    }\n\n    if (typeof this.response === 'string') {\n      return streamFromString(this.response)\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */\n  private coerce(): ReadableStream<Uint8Array>[] {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return []\n    }\n\n    if (typeof this.response === 'string') {\n      return [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      return this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      return [streamFromBuffer(this.response)]\n    } else {\n      return [this.response]\n    }\n  }\n\n  /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */\n  public unshift(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the start of the array.\n    this.response.unshift(readable)\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public push(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the end of the array.\n    this.response.push(readable)\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(\n              response.value.html,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(\n                response.value.html,\n                HTML_CONTENT_TYPE_HEADER\n              ),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    case RouteKind.PAGES_API:\n      // Pages Router API routes are not cached in the incremental cache.\n      throw new Error(`Unexpected route kind ${routeKind}`)\n    default:\n      return routeKind satisfies never\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      waitUntil,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      (cacheKey, resolve) => {\n        const prom = (async () => {\n          // We keep the previous cache entry around to leverage when the\n          // incremental cache is disabled in minimal mode.\n          if (\n            this.minimal_mode &&\n            this.previousCacheItem?.key === cacheKey &&\n            this.previousCacheItem.expiresAt > Date.now()\n          ) {\n            return this.previousCacheItem.entry\n          }\n\n          // Coerce the kindHint into a given kind for the incremental cache.\n          const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n          let resolved = false\n          let cachedResponse: IncrementalResponseCacheEntry | null = null\n          try {\n            cachedResponse = !this.minimal_mode\n              ? await incrementalCache.get(key, {\n                  kind,\n                  isRoutePPREnabled: context.isRoutePPREnabled,\n                  isFallback,\n                })\n              : null\n\n            if (cachedResponse && !isOnDemandRevalidate) {\n              resolve(cachedResponse)\n              resolved = true\n\n              if (!cachedResponse.isStale || context.isPrefetch) {\n                // The cached value is still valid, so we don't need\n                // to update it yet.\n                return null\n              }\n            }\n\n            const cacheEntry = await responseGenerator({\n              hasResolved: resolved,\n              previousCacheEntry: cachedResponse,\n              isRevalidating: true,\n            })\n\n            // If the cache entry couldn't be generated, we don't want to cache\n            // the result.\n            if (!cacheEntry) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            const resolveValue = await fromResponseCacheEntry({\n              ...cacheEntry,\n              isMiss: !cachedResponse,\n            })\n            if (!resolveValue) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            // For on-demand revalidate wait to resolve until cache is set.\n            // Otherwise resolve now.\n            if (!isOnDemandRevalidate && !resolved) {\n              resolve(resolveValue)\n              resolved = true\n            }\n\n            // We want to persist the result only if it has a cache control value\n            // defined.\n            if (resolveValue.cacheControl) {\n              if (this.minimal_mode) {\n                this.previousCacheItem = {\n                  key: cacheKey,\n                  entry: resolveValue,\n                  expiresAt: Date.now() + 1000,\n                }\n              } else {\n                await incrementalCache.set(key, resolveValue.value, {\n                  cacheControl: resolveValue.cacheControl,\n                  isRoutePPREnabled,\n                  isFallback,\n                })\n              }\n            }\n\n            return resolveValue\n          } catch (err) {\n            // When a path is erroring we automatically re-set the existing cache\n            // with new revalidate and expire times to prevent non-stop retrying.\n            if (cachedResponse?.cacheControl) {\n              const newRevalidate = Math.min(\n                Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n                30\n              )\n\n              const newExpire =\n                cachedResponse.cacheControl.expire === undefined\n                  ? undefined\n                  : Math.max(\n                      newRevalidate + 3,\n                      cachedResponse.cacheControl.expire\n                    )\n\n              await incrementalCache.set(key, cachedResponse.value, {\n                cacheControl: { revalidate: newRevalidate, expire: newExpire },\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n\n            // While revalidating in the background we can't reject as we already\n            // resolved the cache entry so log the error here.\n            if (resolved) {\n              console.error(err)\n              return null\n            }\n\n            // We haven't resolved yet, so let's throw to indicate an error.\n            throw err\n          }\n        })()\n\n        // we need to ensure background revalidates are\n        // passed to waitUntil\n        if (waitUntil) {\n          waitUntil(prom)\n        }\n        return prom\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import type {\n  WorkAsyncStorage,\n  WorkStore,\n} from '../app-render/work-async-storage.external'\n\nimport { AppRenderSpan, NextNodeServerSpan } from './trace/constants'\nimport { getTracer, SpanKind } from './trace/tracer'\nimport {\n  CACHE_ONE_YEAR,\n  INFINITE_CACHE,\n  NEXT_CACHE_TAG_MAX_ITEMS,\n  NEXT_CACHE_TAG_MAX_LENGTH,\n} from '../../lib/constants'\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport type { FetchMetric } from '../base-http'\nimport { createDedupeFetch } from './dedupe-fetch'\nimport {\n  getCacheSignal,\n  type RevalidateStore,\n  type WorkUnitAsyncStorage,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n  type ServerComponentsHmrCache,\n  type SetIncrementalFetchCacheContext,\n} from '../response-cache'\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler'\nimport { cloneResponse } from './clone-response'\nimport type { IncrementalCache } from './incremental-cache'\n\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge'\n\ntype Fetcher = typeof fetch\n\ntype PatchedFetcher = Fetcher & {\n  readonly __nextPatched: true\n  readonly __nextGetStaticStore: () => WorkAsyncStorage\n  readonly _nextOriginalFetch: Fetcher\n}\n\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch')\n\nfunction isFetchPatched() {\n  return (globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] === true\n}\n\nexport function validateRevalidate(\n  revalidateVal: unknown,\n  route: string\n): undefined | number {\n  try {\n    let normalizedRevalidate: number | undefined = undefined\n\n    if (revalidateVal === false) {\n      normalizedRevalidate = INFINITE_CACHE\n    } else if (\n      typeof revalidateVal === 'number' &&\n      !isNaN(revalidateVal) &&\n      revalidateVal > -1\n    ) {\n      normalizedRevalidate = revalidateVal\n    } else if (typeof revalidateVal !== 'undefined') {\n      throw new Error(\n        `Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`\n      )\n    }\n    return normalizedRevalidate\n  } catch (err: any) {\n    // handle client component error from attempting to check revalidate value\n    if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n      throw err\n    }\n    return undefined\n  }\n}\n\nexport function validateTags(tags: any[], description: string) {\n  const validTags: string[] = []\n  const invalidTags: Array<{\n    tag: any\n    reason: string\n  }> = []\n\n  for (let i = 0; i < tags.length; i++) {\n    const tag = tags[i]\n\n    if (typeof tag !== 'string') {\n      invalidTags.push({ tag, reason: 'invalid type, must be a string' })\n    } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n      invalidTags.push({\n        tag,\n        reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`,\n      })\n    } else {\n      validTags.push(tag)\n    }\n\n    if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n      console.warn(\n        `Warning: exceeded max tag count for ${description}, dropped tags:`,\n        tags.slice(i).join(', ')\n      )\n      break\n    }\n  }\n\n  if (invalidTags.length > 0) {\n    console.warn(`Warning: invalid tags passed to ${description}: `)\n\n    for (const { tag, reason } of invalidTags) {\n      console.log(`tag: \"${tag}\" ${reason}`)\n    }\n  }\n  return validTags\n}\n\nfunction trackFetchMetric(\n  workStore: WorkStore,\n  ctx: Omit<FetchMetric, 'end' | 'idx'>\n) {\n  if (!workStore.shouldTrackFetchMetrics) {\n    return\n  }\n\n  workStore.fetchMetrics ??= []\n\n  workStore.fetchMetrics.push({\n    ...ctx,\n    end: performance.timeOrigin + performance.now(),\n    idx: workStore.nextFetchId || 0,\n  })\n}\n\nasync function createCachedPrerenderResponse(\n  res: Response,\n  cacheKey: string,\n  incrementalCacheContext: SetIncrementalFetchCacheContext | undefined,\n  incrementalCache: IncrementalCache,\n  revalidate: number,\n  handleUnlock: () => Promise<void> | void\n): Promise<Response> {\n  // We are prerendering at build time or revalidate time with cacheComponents so we\n  // need to buffer the response so we can guarantee it can be read in a\n  // microtask.\n  const bodyBuffer = await res.arrayBuffer()\n\n  const fetchedData = {\n    headers: Object.fromEntries(res.headers.entries()),\n    body: Buffer.from(bodyBuffer).toString('base64'),\n    status: res.status,\n    url: res.url,\n  }\n\n  // We can skip setting the serverComponentsHmrCache because we aren't in dev\n  // mode.\n\n  if (incrementalCacheContext) {\n    await incrementalCache.set(\n      cacheKey,\n      { kind: CachedRouteKind.FETCH, data: fetchedData, revalidate },\n      incrementalCacheContext\n    )\n  }\n\n  await handleUnlock()\n\n  // We return a new Response to the caller.\n  return new Response(bodyBuffer, {\n    headers: res.headers,\n    status: res.status,\n    statusText: res.statusText,\n  })\n}\n\nasync function createCachedDynamicResponse(\n  workStore: WorkStore,\n  res: Response,\n  cacheKey: string,\n  incrementalCacheContext: SetIncrementalFetchCacheContext | undefined,\n  incrementalCache: IncrementalCache,\n  serverComponentsHmrCache: ServerComponentsHmrCache | undefined,\n  revalidate: number,\n  input: RequestInfo | URL,\n  handleUnlock: () => Promise<void> | void\n): Promise<Response> {\n  // We're cloning the response using this utility because there exists a bug in\n  // the undici library around response cloning. See the following pull request\n  // for more details: https://github.com/vercel/next.js/pull/73274\n  const [cloned1, cloned2] = cloneResponse(res)\n\n  // We are dynamically rendering including dev mode. We want to return the\n  // response to the caller as soon as possible because it might stream over a\n  // very long time.\n  const cacheSetPromise = cloned1\n    .arrayBuffer()\n    .then(async (arrayBuffer) => {\n      const bodyBuffer = Buffer.from(arrayBuffer)\n\n      const fetchedData = {\n        headers: Object.fromEntries(cloned1.headers.entries()),\n        body: bodyBuffer.toString('base64'),\n        status: cloned1.status,\n        url: cloned1.url,\n      }\n\n      serverComponentsHmrCache?.set(cacheKey, fetchedData)\n\n      if (incrementalCacheContext) {\n        await incrementalCache.set(\n          cacheKey,\n          { kind: CachedRouteKind.FETCH, data: fetchedData, revalidate },\n          incrementalCacheContext\n        )\n      }\n    })\n    .catch((error) => console.warn(`Failed to set fetch cache`, input, error))\n    .finally(handleUnlock)\n\n  const pendingRevalidateKey = `cache-set-${cacheKey}`\n  workStore.pendingRevalidates ??= {}\n\n  if (pendingRevalidateKey in workStore.pendingRevalidates) {\n    // there is already a pending revalidate entry that we need to await to\n    // avoid race conditions\n    await workStore.pendingRevalidates[pendingRevalidateKey]\n  }\n\n  workStore.pendingRevalidates[pendingRevalidateKey] = cacheSetPromise.finally(\n    () => {\n      // If the pending revalidate is not present in the store, then we have\n      // nothing to delete.\n      if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n        return\n      }\n\n      delete workStore.pendingRevalidates[pendingRevalidateKey]\n    }\n  )\n\n  return cloned2\n}\n\ninterface PatchableModule {\n  workAsyncStorage: WorkAsyncStorage\n  workUnitAsyncStorage: WorkUnitAsyncStorage\n}\n\nexport function createPatchedFetcher(\n  originFetch: Fetcher,\n  { workAsyncStorage, workUnitAsyncStorage }: PatchableModule\n): PatchedFetcher {\n  // Create the patched fetch function.\n  const patched = async function fetch(\n    input: RequestInfo | URL,\n    init: RequestInit | undefined\n  ): Promise<Response> {\n    let url: URL | undefined\n    try {\n      url = new URL(input instanceof Request ? input.url : input)\n      url.username = ''\n      url.password = ''\n    } catch {\n      // Error caused by malformed URL should be handled by native fetch\n      url = undefined\n    }\n    const fetchUrl = url?.href ?? ''\n    const method = init?.method?.toUpperCase() || 'GET'\n\n    // Do create a new span trace for internal fetches in the\n    // non-verbose mode.\n    const isInternal = (init?.next as any)?.internal === true\n    const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1'\n    // We don't track fetch metrics for internal fetches\n    // so it's not critical that we have a start time, as it won't be recorded.\n    // This is to workaround a flaky issue where performance APIs might\n    // not be available and will require follow-up investigation.\n    const fetchStart: number | undefined = isInternal\n      ? undefined\n      : performance.timeOrigin + performance.now()\n\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    // During static generation we track cache reads so we can reason about when they fill\n    let cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n\n    const result = getTracer().trace(\n      isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch,\n      {\n        hideSpan,\n        kind: SpanKind.CLIENT,\n        spanName: ['fetch', method, fetchUrl].filter(Boolean).join(' '),\n        attributes: {\n          'http.url': fetchUrl,\n          'http.method': method,\n          'net.peer.name': url?.hostname,\n          'net.peer.port': url?.port || undefined,\n        },\n      },\n      async () => {\n        // If this is an internal fetch, we should not do any special treatment.\n        if (isInternal) {\n          return originFetch(input, init)\n        }\n\n        // If the workStore is not available, we can't do any\n        // special treatment of fetch, therefore fallback to the original\n        // fetch implementation.\n        if (!workStore) {\n          return originFetch(input, init)\n        }\n\n        // We should also fallback to the original fetch implementation if we\n        // are in draft mode, it does not constitute a static generation.\n        if (workStore.isDraftMode) {\n          return originFetch(input, init)\n        }\n\n        const isRequestInput =\n          input &&\n          typeof input === 'object' &&\n          typeof (input as Request).method === 'string'\n\n        const getRequestMeta = (field: string) => {\n          // If request input is present but init is not, retrieve from input first.\n          const value = (init as any)?.[field]\n          return value || (isRequestInput ? (input as any)[field] : null)\n        }\n\n        let finalRevalidate: number | undefined = undefined\n        const getNextField = (field: 'revalidate' | 'tags') => {\n          return typeof init?.next?.[field] !== 'undefined'\n            ? init?.next?.[field]\n            : isRequestInput\n              ? (input as any).next?.[field]\n              : undefined\n        }\n        // RequestInit doesn't keep extra fields e.g. next so it's\n        // only available if init is used separate\n        const originalFetchRevalidate = getNextField('revalidate')\n        let currentFetchRevalidate = originalFetchRevalidate\n        const tags: string[] = validateTags(\n          getNextField('tags') || [],\n          `fetch ${input.toString()}`\n        )\n\n        let revalidateStore: RevalidateStore | undefined\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'prerender':\n            case 'prerender-runtime':\n            // TODO: Stop accumulating tags in client prerender. (fallthrough)\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n              revalidateStore = workUnitStore\n              break\n            case 'request':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (revalidateStore) {\n          if (Array.isArray(tags)) {\n            // Collect tags onto parent caches or parent prerenders.\n            const collectedTags =\n              revalidateStore.tags ?? (revalidateStore.tags = [])\n            for (const tag of tags) {\n              if (!collectedTags.includes(tag)) {\n                collectedTags.push(tag)\n              }\n            }\n          }\n        }\n\n        const implicitTags = workUnitStore?.implicitTags\n\n        let pageFetchCacheMode = workStore.fetchCache\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'unstable-cache':\n              // Inside unstable-cache we treat it the same as force-no-store on\n              // the page.\n              pageFetchCacheMode = 'force-no-store'\n              break\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        const isUsingNoStore = !!workStore.isUnstableNoStore\n\n        let currentFetchCacheConfig = getRequestMeta('cache')\n        let cacheReason = ''\n        let cacheWarning: string | undefined\n\n        if (\n          typeof currentFetchCacheConfig === 'string' &&\n          typeof currentFetchRevalidate !== 'undefined'\n        ) {\n          // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n          const isConflictingRevalidate =\n            // revalidate: 0 and cache: force-cache\n            (currentFetchCacheConfig === 'force-cache' &&\n              currentFetchRevalidate === 0) ||\n            // revalidate: >0 or revalidate: false and cache: no-store\n            (currentFetchCacheConfig === 'no-store' &&\n              (currentFetchRevalidate > 0 || currentFetchRevalidate === false))\n\n          if (isConflictingRevalidate) {\n            cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`\n            currentFetchCacheConfig = undefined\n            currentFetchRevalidate = undefined\n          }\n        }\n\n        const hasExplicitFetchCacheOptOut =\n          // fetch config itself signals not to cache\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store' ||\n          // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n          // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n          pageFetchCacheMode === 'force-no-store' ||\n          pageFetchCacheMode === 'only-no-store'\n\n        // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n        // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n        // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n        // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n        // other configurations.\n        const noFetchConfigAndForceDynamic =\n          !pageFetchCacheMode &&\n          !currentFetchCacheConfig &&\n          !currentFetchRevalidate &&\n          workStore.forceDynamic\n\n        if (\n          // force-cache was specified without a revalidate value. We set the revalidate value to false\n          // which will signal the cache to not revalidate\n          currentFetchCacheConfig === 'force-cache' &&\n          typeof currentFetchRevalidate === 'undefined'\n        ) {\n          currentFetchRevalidate = false\n        } else if (\n          hasExplicitFetchCacheOptOut ||\n          noFetchConfigAndForceDynamic\n        ) {\n          currentFetchRevalidate = 0\n        }\n\n        if (\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store'\n        ) {\n          cacheReason = `cache: ${currentFetchCacheConfig}`\n        }\n\n        finalRevalidate = validateRevalidate(\n          currentFetchRevalidate,\n          workStore.route\n        )\n\n        const _headers = getRequestMeta('headers')\n        const initHeaders: Headers =\n          typeof _headers?.get === 'function'\n            ? _headers\n            : new Headers(_headers || {})\n\n        const hasUnCacheableHeader =\n          initHeaders.get('authorization') || initHeaders.get('cookie')\n\n        const isUnCacheableMethod = !['get', 'head'].includes(\n          getRequestMeta('method')?.toLowerCase() || 'get'\n        )\n\n        /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */\n        const hasNoExplicitCacheConfig =\n          // eslint-disable-next-line eqeqeq\n          pageFetchCacheMode == undefined &&\n          // eslint-disable-next-line eqeqeq\n          (currentFetchCacheConfig == undefined ||\n            // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') &&\n          // eslint-disable-next-line eqeqeq\n          currentFetchRevalidate == undefined\n\n        let autoNoCache = Boolean(\n          (hasUnCacheableHeader || isUnCacheableMethod) &&\n            revalidateStore?.revalidate === 0\n        )\n\n        let isImplicitBuildTimeCache = false\n\n        if (!autoNoCache && hasNoExplicitCacheConfig) {\n          // We don't enable automatic no-cache behavior during build-time\n          // prerendering so that we can still leverage the fetch cache between\n          // export workers.\n          if (workStore.isBuildTimePrerendering) {\n            isImplicitBuildTimeCache = true\n          } else {\n            autoNoCache = true\n          }\n        }\n\n        // If we have no cache config, and we're in Dynamic I/O prerendering,\n        // it'll be a dynamic call. We don't have to issue that dynamic call.\n        if (hasNoExplicitCacheConfig && workUnitStore !== undefined) {\n          switch (workUnitStore.type) {\n            case 'prerender':\n            case 'prerender-runtime':\n            // While we don't want to do caching in the client scope we know the\n            // fetch will be dynamic for cacheComponents so we may as well avoid the\n            // call here. (fallthrough)\n            case 'prerender-client':\n              if (cacheSignal) {\n                cacheSignal.endRead()\n                cacheSignal = null\n              }\n\n              return makeHangingPromise<Response>(\n                workUnitStore.renderSignal,\n                workStore.route,\n                'fetch()'\n              )\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        switch (pageFetchCacheMode) {\n          case 'force-no-store': {\n            cacheReason = 'fetchCache = force-no-store'\n            break\n          }\n          case 'only-no-store': {\n            if (\n              currentFetchCacheConfig === 'force-cache' ||\n              (typeof finalRevalidate !== 'undefined' && finalRevalidate > 0)\n            ) {\n              throw new Error(\n                `cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`\n              )\n            }\n            cacheReason = 'fetchCache = only-no-store'\n            break\n          }\n          case 'only-cache': {\n            if (currentFetchCacheConfig === 'no-store') {\n              throw new Error(\n                `cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`\n              )\n            }\n            break\n          }\n          case 'force-cache': {\n            if (\n              typeof currentFetchRevalidate === 'undefined' ||\n              currentFetchRevalidate === 0\n            ) {\n              cacheReason = 'fetchCache = force-cache'\n              finalRevalidate = INFINITE_CACHE\n            }\n            break\n          }\n          case 'default-cache':\n          case 'default-no-store':\n          case 'auto':\n          case undefined:\n            // sometimes we won't match the above cases. the reason we don't move\n            // everything to this switch is the use of autoNoCache which is not a fetchCacheMode\n            // I suspect this could be unified with fetchCacheMode however in which case we could\n            // simplify the switch case and ensure we have an exhaustive switch handling all modes\n            break\n          default:\n            pageFetchCacheMode satisfies never\n        }\n\n        if (typeof finalRevalidate === 'undefined') {\n          if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n            finalRevalidate = INFINITE_CACHE\n            cacheReason = 'fetchCache = default-cache'\n          } else if (pageFetchCacheMode === 'default-no-store') {\n            finalRevalidate = 0\n            cacheReason = 'fetchCache = default-no-store'\n          } else if (isUsingNoStore) {\n            finalRevalidate = 0\n            cacheReason = 'noStore call'\n          } else if (autoNoCache) {\n            finalRevalidate = 0\n            cacheReason = 'auto no cache'\n          } else {\n            // TODO: should we consider this case an invariant?\n            cacheReason = 'auto cache'\n            finalRevalidate = revalidateStore\n              ? revalidateStore.revalidate\n              : INFINITE_CACHE\n          }\n        } else if (!cacheReason) {\n          cacheReason = `revalidate: ${finalRevalidate}`\n        }\n\n        if (\n          // when force static is configured we don't bail from\n          // `revalidate: 0` values\n          !(workStore.forceStatic && finalRevalidate === 0) &&\n          // we don't consider autoNoCache to switch to dynamic for ISR\n          !autoNoCache &&\n          // If the revalidate value isn't currently set or the value is less\n          // than the current revalidate value, we should update the revalidate\n          // value.\n          revalidateStore &&\n          finalRevalidate < revalidateStore.revalidate\n        ) {\n          // If we were setting the revalidate value to 0, we should try to\n          // postpone instead first.\n          if (finalRevalidate === 0) {\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    workStore.route,\n                    'fetch()'\n                  )\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'request':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `revalidate: 0 fetch ${input} ${workStore.route}`\n            )\n          }\n\n          // We only want to set the revalidate store's revalidate time if it\n          // was explicitly set for the fetch call, i.e.\n          // originalFetchRevalidate.\n          if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n            revalidateStore.revalidate = finalRevalidate\n          }\n        }\n\n        const isCacheableRevalidate =\n          typeof finalRevalidate === 'number' && finalRevalidate > 0\n\n        let cacheKey: string | undefined\n        const { incrementalCache } = workStore\n        let isHmrRefresh = false\n        let serverComponentsHmrCache: ServerComponentsHmrCache | undefined\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n              isHmrRefresh = workUnitStore.isHmrRefresh ?? false\n              serverComponentsHmrCache = workUnitStore.serverComponentsHmrCache\n              break\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (\n          incrementalCache &&\n          (isCacheableRevalidate || serverComponentsHmrCache)\n        ) {\n          try {\n            cacheKey = await incrementalCache.generateCacheKey(\n              fetchUrl,\n              isRequestInput ? (input as RequestInit) : init\n            )\n          } catch (err) {\n            console.error(`Failed to generate cache key for`, input)\n          }\n        }\n\n        const fetchIdx = workStore.nextFetchId ?? 1\n        workStore.nextFetchId = fetchIdx + 1\n\n        let handleUnlock: () => Promise<void> | void = () => {}\n\n        const doOriginalFetch = async (\n          isStale?: boolean,\n          cacheReasonOverride?: string\n        ) => {\n          const requestInputFields = [\n            'cache',\n            'credentials',\n            'headers',\n            'integrity',\n            'keepalive',\n            'method',\n            'mode',\n            'redirect',\n            'referrer',\n            'referrerPolicy',\n            'window',\n            'duplex',\n\n            // don't pass through signal when revalidating\n            ...(isStale ? [] : ['signal']),\n          ]\n\n          if (isRequestInput) {\n            const reqInput: Request = input as any\n            const reqOptions: RequestInit = {\n              body: (reqInput as any)._ogBody || reqInput.body,\n            }\n\n            for (const field of requestInputFields) {\n              // @ts-expect-error custom fields\n              reqOptions[field] = reqInput[field]\n            }\n            input = new Request(reqInput.url, reqOptions)\n          } else if (init) {\n            const { _ogBody, body, signal, ...otherInput } =\n              init as RequestInit & { _ogBody?: any }\n            init = {\n              ...otherInput,\n              body: _ogBody || body,\n              signal: isStale ? undefined : signal,\n            }\n          }\n\n          // add metadata to init without editing the original\n          const clonedInit = {\n            ...init,\n            next: { ...init?.next, fetchType: 'origin', fetchIdx },\n          }\n\n          return originFetch(input, clonedInit)\n            .then(async (res) => {\n              if (!isStale && fetchStart) {\n                trackFetchMetric(workStore, {\n                  start: fetchStart,\n                  url: fetchUrl,\n                  cacheReason: cacheReasonOverride || cacheReason,\n                  cacheStatus:\n                    finalRevalidate === 0 || cacheReasonOverride\n                      ? 'skip'\n                      : 'miss',\n                  cacheWarning,\n                  status: res.status,\n                  method: clonedInit.method || 'GET',\n                })\n              }\n              if (\n                res.status === 200 &&\n                incrementalCache &&\n                cacheKey &&\n                (isCacheableRevalidate || serverComponentsHmrCache)\n              ) {\n                const normalizedRevalidate =\n                  finalRevalidate >= INFINITE_CACHE\n                    ? CACHE_ONE_YEAR\n                    : finalRevalidate\n\n                const incrementalCacheConfig:\n                  | SetIncrementalFetchCacheContext\n                  | undefined = isCacheableRevalidate\n                  ? {\n                      fetchCache: true,\n                      fetchUrl,\n                      fetchIdx,\n                      tags,\n                      isImplicitBuildTimeCache,\n                    }\n                  : undefined\n\n                switch (workUnitStore?.type) {\n                  case 'prerender':\n                  case 'prerender-client':\n                  case 'prerender-runtime':\n                    return createCachedPrerenderResponse(\n                      res,\n                      cacheKey,\n                      incrementalCacheConfig,\n                      incrementalCache,\n                      normalizedRevalidate,\n                      handleUnlock\n                    )\n                  case 'prerender-ppr':\n                  case 'prerender-legacy':\n                  case 'request':\n                  case 'cache':\n                  case 'private-cache':\n                  case 'unstable-cache':\n                  case undefined:\n                    return createCachedDynamicResponse(\n                      workStore,\n                      res,\n                      cacheKey,\n                      incrementalCacheConfig,\n                      incrementalCache,\n                      serverComponentsHmrCache,\n                      normalizedRevalidate,\n                      input,\n                      handleUnlock\n                    )\n                  default:\n                    workUnitStore satisfies never\n                }\n              }\n\n              // we had response that we determined shouldn't be cached so we return it\n              // and don't cache it. This also needs to unlock the cache lock we acquired.\n              await handleUnlock()\n\n              return res\n            })\n            .catch((error) => {\n              handleUnlock()\n              throw error\n            })\n        }\n\n        let cacheReasonOverride\n        let isForegroundRevalidate = false\n        let isHmrRefreshCache = false\n\n        if (cacheKey && incrementalCache) {\n          let cachedFetchData: CachedFetchData | undefined\n\n          if (isHmrRefresh && serverComponentsHmrCache) {\n            cachedFetchData = serverComponentsHmrCache.get(cacheKey)\n            isHmrRefreshCache = true\n          }\n\n          if (isCacheableRevalidate && !cachedFetchData) {\n            handleUnlock = await incrementalCache.lock(cacheKey)\n            const entry = workStore.isOnDemandRevalidate\n              ? null\n              : await incrementalCache.get(cacheKey, {\n                  kind: IncrementalCacheKind.FETCH,\n                  revalidate: finalRevalidate,\n                  fetchUrl,\n                  fetchIdx,\n                  tags,\n                  softTags: implicitTags?.tags,\n                })\n\n            if (hasNoExplicitCacheConfig && workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  // We sometimes use the cache to dedupe fetches that do not\n                  // specify a cache configuration. In these cases we want to\n                  // make sure we still exclude them from prerenders if\n                  // cacheComponents is on so we introduce an artificial task boundary\n                  // here.\n                  await waitAtLeastOneReactRenderTask()\n                  break\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'request':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n\n            if (entry) {\n              await handleUnlock()\n            } else {\n              // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n              cacheReasonOverride = 'cache-control: no-cache (hard refresh)'\n            }\n\n            if (entry?.value && entry.value.kind === CachedRouteKind.FETCH) {\n              // when stale and is revalidating we wait for fresh data\n              // so the revalidated entry has the updated data\n              if (workStore.isRevalidate && entry.isStale) {\n                isForegroundRevalidate = true\n              } else {\n                if (entry.isStale) {\n                  workStore.pendingRevalidates ??= {}\n                  if (!workStore.pendingRevalidates[cacheKey]) {\n                    const pendingRevalidate = doOriginalFetch(true)\n                      .then(async (response) => ({\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText,\n                      }))\n                      .finally(() => {\n                        workStore.pendingRevalidates ??= {}\n                        delete workStore.pendingRevalidates[cacheKey || '']\n                      })\n\n                    // Attach the empty catch here so we don't get a \"unhandled\n                    // promise rejection\" warning.\n                    pendingRevalidate.catch(console.error)\n\n                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate\n                  }\n                }\n\n                cachedFetchData = entry.value.data\n              }\n            }\n          }\n\n          if (cachedFetchData) {\n            if (fetchStart) {\n              trackFetchMetric(workStore, {\n                start: fetchStart,\n                url: fetchUrl,\n                cacheReason,\n                cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                cacheWarning,\n                status: cachedFetchData.status || 200,\n                method: init?.method || 'GET',\n              })\n            }\n\n            const response = new Response(\n              Buffer.from(cachedFetchData.body, 'base64'),\n              {\n                headers: cachedFetchData.headers,\n                status: cachedFetchData.status,\n              }\n            )\n\n            Object.defineProperty(response, 'url', {\n              value: cachedFetchData.url,\n            })\n\n            return response\n          }\n        }\n\n        if (workStore.isStaticGeneration && init && typeof init === 'object') {\n          const { cache } = init\n\n          // Delete `cache` property as Cloudflare Workers will throw an error\n          if (isEdgeRuntime) delete init.cache\n\n          if (cache === 'no-store') {\n            // If enabled, we should bail out of static generation.\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    workStore.route,\n                    'fetch()'\n                  )\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'request':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `no-store fetch ${input} ${workStore.route}`\n            )\n          }\n\n          const hasNextConfig = 'next' in init\n          const { next = {} } = init\n          if (\n            typeof next.revalidate === 'number' &&\n            revalidateStore &&\n            next.revalidate < revalidateStore.revalidate\n          ) {\n            if (next.revalidate === 0) {\n              // If enabled, we should bail out of static generation.\n              if (workUnitStore) {\n                switch (workUnitStore.type) {\n                  case 'prerender':\n                  case 'prerender-client':\n                  case 'prerender-runtime':\n                    return makeHangingPromise<Response>(\n                      workUnitStore.renderSignal,\n                      workStore.route,\n                      'fetch()'\n                    )\n                  case 'request':\n                  case 'cache':\n                  case 'private-cache':\n                  case 'unstable-cache':\n                  case 'prerender-legacy':\n                  case 'prerender-ppr':\n                    break\n                  default:\n                    workUnitStore satisfies never\n                }\n              }\n              markCurrentScopeAsDynamic(\n                workStore,\n                workUnitStore,\n                `revalidate: 0 fetch ${input} ${workStore.route}`\n              )\n            }\n\n            if (!workStore.forceStatic || next.revalidate !== 0) {\n              revalidateStore.revalidate = next.revalidate\n            }\n          }\n          if (hasNextConfig) delete init.next\n        }\n\n        // if we are revalidating the whole page via time or on-demand and\n        // the fetch cache entry is stale we should still de-dupe the\n        // origin hit if it's a cache-able entry\n        if (cacheKey && isForegroundRevalidate) {\n          const pendingRevalidateKey = cacheKey\n          workStore.pendingRevalidates ??= {}\n          let pendingRevalidate =\n            workStore.pendingRevalidates[pendingRevalidateKey]\n\n          if (pendingRevalidate) {\n            const revalidatedResult: {\n              body: ArrayBuffer\n              headers: Headers\n              status: number\n              statusText: string\n            } = await pendingRevalidate\n            return new Response(revalidatedResult.body, {\n              headers: revalidatedResult.headers,\n              status: revalidatedResult.status,\n              statusText: revalidatedResult.statusText,\n            })\n          }\n\n          // We used to just resolve the Response and clone it however for\n          // static generation with cacheComponents we need the response to be able to\n          // be resolved in a microtask and cloning the response will never have\n          // a body that can resolve in a microtask in node (as observed through\n          // experimentation) So instead we await the body and then when it is\n          // available we construct manually cloned Response objects with the\n          // body as an ArrayBuffer. This will be resolvable in a microtask\n          // making it compatible with cacheComponents.\n          const pendingResponse = doOriginalFetch(true, cacheReasonOverride)\n            // We're cloning the response using this utility because there\n            // exists a bug in the undici library around response cloning.\n            // See the following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            .then(cloneResponse)\n\n          pendingRevalidate = pendingResponse\n            .then(async (responses) => {\n              const response = responses[0]\n              return {\n                body: await response.arrayBuffer(),\n                headers: response.headers,\n                status: response.status,\n                statusText: response.statusText,\n              }\n            })\n            .finally(() => {\n              // If the pending revalidate is not present in the store, then\n              // we have nothing to delete.\n              if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n                return\n              }\n\n              delete workStore.pendingRevalidates[pendingRevalidateKey]\n            })\n\n          // Attach the empty catch here so we don't get a \"unhandled promise\n          // rejection\" warning\n          pendingRevalidate.catch(() => {})\n\n          workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate\n\n          return pendingResponse.then((responses) => responses[1])\n        } else {\n          return doOriginalFetch(false, cacheReasonOverride)\n        }\n      }\n    )\n\n    if (cacheSignal) {\n      try {\n        return await result\n      } finally {\n        if (cacheSignal) {\n          cacheSignal.endRead()\n        }\n      }\n    }\n    return result\n  }\n\n  // Attach the necessary properties to the patched fetch function.\n  // We don't use this to determine if the fetch function has been patched,\n  // but for external consumers to determine if the fetch function has been\n  // patched.\n  patched.__nextPatched = true as const\n  patched.__nextGetStaticStore = () => workAsyncStorage\n  patched._nextOriginalFetch = originFetch\n  ;(globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] = true\n\n  // Assign the function name also as a name property, so that it's preserved\n  // even when mangling is enabled.\n  Object.defineProperty(patched, 'name', { value: 'fetch', writable: false })\n\n  return patched\n}\n\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options: PatchableModule) {\n  // If we've already patched fetch, we should not patch it again.\n  if (isFetchPatched()) return\n\n  // Grab the original fetch function. We'll attach this so we can use it in\n  // the patched fetch function.\n  const original = createDedupeFetch(globalThis.fetch)\n\n  // Set the global fetch to the patched fetch.\n  globalThis.fetch = createPatchedFetcher(original, options)\n}\n","import type { IncrementalCache } from '../../lib/incremental-cache'\n\nimport { CACHE_ONE_YEAR } from '../../../lib/constants'\nimport { validateRevalidate, validateTags } from '../../lib/patch-fetch'\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../../app-render/work-async-storage.external'\nimport {\n  getCacheSignal,\n  getDraftModeProviderForCacheScope,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n} from '../../response-cache'\nimport type {\n  UnstableCacheStore,\n  WorkUnitStore,\n} from '../../app-render/work-unit-async-storage.external'\n\ntype Callback = (...args: any[]) => Promise<any>\n\nlet noStoreFetchIdx = 0\n\nasync function cacheNewResult<T>(\n  result: T,\n  incrementalCache: IncrementalCache,\n  cacheKey: string,\n  tags: string[],\n  revalidate: number | false | undefined,\n  fetchIdx: number,\n  fetchUrl: string\n): Promise<unknown> {\n  await incrementalCache.set(\n    cacheKey,\n    {\n      kind: CachedRouteKind.FETCH,\n      data: {\n        headers: {},\n        // TODO: handle non-JSON values?\n        body: JSON.stringify(result),\n        status: 200,\n        url: '',\n      } satisfies CachedFetchData,\n      revalidate: typeof revalidate !== 'number' ? CACHE_ONE_YEAR : revalidate,\n    },\n    { fetchCache: true, tags, fetchIdx, fetchUrl }\n  )\n  return\n}\n\n/**\n * This function allows you to cache the results of expensive operations, like database queries, and reuse them across multiple requests.\n *\n * Read more: [Next.js Docs: `unstable_cache`](https://nextjs.org/docs/app/api-reference/functions/unstable_cache)\n */\nexport function unstable_cache<T extends Callback>(\n  cb: T,\n  keyParts?: string[],\n  options: {\n    /**\n     * The revalidation interval in seconds.\n     */\n    revalidate?: number | false\n    tags?: string[]\n  } = {}\n): T {\n  if (options.revalidate === 0) {\n    throw new Error(\n      `Invariant revalidate: 0 can not be passed to unstable_cache(), must be \"false\" or \"> 0\" ${cb.toString()}`\n    )\n  }\n\n  // Validate the tags provided are valid\n  const tags = options.tags\n    ? validateTags(options.tags, `unstable_cache ${cb.toString()}`)\n    : []\n\n  // Validate the revalidate options\n  validateRevalidate(\n    options.revalidate,\n    `unstable_cache ${cb.name || cb.toString()}`\n  )\n\n  // Stash the fixed part of the key at construction time. The invocation key will combine\n  // the fixed key with the arguments when actually called\n  // @TODO if cb.toString() is long we should hash it\n  // @TODO come up with a collision-free way to combine keyParts\n  // @TODO consider validating the keyParts are all strings. TS can't provide runtime guarantees\n  // and the error produced by accidentally using something that cannot be safely coerced is likely\n  // hard to debug\n  const fixedKey = `${cb.toString()}-${\n    Array.isArray(keyParts) && keyParts.join(',')\n  }`\n\n  const cachedCb = async (...args: any[]) => {\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    // We must be able to find the incremental cache otherwise we throw\n    const maybeIncrementalCache:\n      | import('../../lib/incremental-cache').IncrementalCache\n      | undefined =\n      workStore?.incrementalCache || (globalThis as any).__incrementalCache\n\n    if (!maybeIncrementalCache) {\n      throw new Error(\n        `Invariant: incrementalCache missing in unstable_cache ${cb.toString()}`\n      )\n    }\n    const incrementalCache = maybeIncrementalCache\n\n    const cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n    try {\n      // If there's no request store, we aren't in a request (or we're not in\n      // app router) and if there's no static generation store, we aren't in app\n      // router. Default to an empty pathname and search params when there's no\n      // request store or static generation store available.\n      const fetchUrlPrefix =\n        workStore && workUnitStore\n          ? getFetchUrlPrefix(workStore, workUnitStore)\n          : ''\n\n      // Construct the complete cache key for this function invocation\n      // @TODO stringify is likely not safe here. We will coerce undefined to null which will make\n      // the keyspace smaller than the execution space\n      const invocationKey = `${fixedKey}-${JSON.stringify(args)}`\n      const cacheKey = await incrementalCache.generateCacheKey(invocationKey)\n      // $urlWithPath,$sortedQueryStringKeys,$hashOfEveryThingElse\n      const fetchUrl = `unstable_cache ${fetchUrlPrefix} ${cb.name ? ` ${cb.name}` : cacheKey}`\n      const fetchIdx =\n        (workStore ? workStore.nextFetchId : noStoreFetchIdx) ?? 1\n\n      const implicitTags = workUnitStore?.implicitTags\n\n      const innerCacheStore: UnstableCacheStore = {\n        type: 'unstable-cache',\n        phase: 'render',\n        implicitTags,\n        draftMode:\n          workUnitStore &&\n          workStore &&\n          getDraftModeProviderForCacheScope(workStore, workUnitStore),\n      }\n\n      if (workStore) {\n        workStore.nextFetchId = fetchIdx + 1\n\n        // We are in an App Router context. We try to return the cached entry if it exists and is valid\n        // If the entry is fresh we return it. If the entry is stale we return it but revalidate the entry in\n        // the background. If the entry is missing or invalid we generate a new entry and return it.\n\n        let isNestedUnstableCache = false\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'cache':\n            case 'private-cache':\n            case 'prerender':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n              // We update the store's revalidate property if the option.revalidate is a higher precedence\n              // options.revalidate === undefined doesn't affect timing.\n              // options.revalidate === false doesn't shrink timing. it stays at the maximum.\n              if (typeof options.revalidate === 'number') {\n                if (workUnitStore.revalidate < options.revalidate) {\n                  // The store is already revalidating on a shorter time interval, leave it alone\n                } else {\n                  workUnitStore.revalidate = options.revalidate\n                }\n              }\n\n              // We need to accumulate the tags for this invocation within the store\n              const collectedTags = workUnitStore.tags\n              if (collectedTags === null) {\n                workUnitStore.tags = tags.slice()\n              } else {\n                for (const tag of tags) {\n                  // @TODO refactor tags to be a set to avoid this O(n) lookup\n                  if (!collectedTags.includes(tag)) {\n                    collectedTags.push(tag)\n                  }\n                }\n              }\n              break\n            case 'unstable-cache':\n              isNestedUnstableCache = true\n              break\n            case 'prerender-client':\n            case 'request':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (\n          // when we are nested inside of other unstable_cache's\n          // we should bypass cache similar to fetches\n          !isNestedUnstableCache &&\n          workStore.fetchCache !== 'force-no-store' &&\n          !workStore.isOnDemandRevalidate &&\n          !incrementalCache.isOnDemandRevalidate &&\n          !workStore.isDraftMode\n        ) {\n          // We attempt to get the current cache entry from the incremental cache.\n          const cacheEntry = await incrementalCache.get(cacheKey, {\n            kind: IncrementalCacheKind.FETCH,\n            revalidate: options.revalidate,\n            tags,\n            softTags: implicitTags?.tags,\n            fetchIdx,\n            fetchUrl,\n          })\n\n          if (cacheEntry && cacheEntry.value) {\n            // The entry exists and has a value\n            if (cacheEntry.value.kind !== CachedRouteKind.FETCH) {\n              // The entry is invalid and we need a special warning\n              // @TODO why do we warn this way? Should this just be an error? How are these errors surfaced\n              // so bugs can be reported\n              // @TODO the invocation key can have sensitive data in it. we should not log this entire object\n              console.error(\n                `Invariant invalid cacheEntry returned for ${invocationKey}`\n              )\n              // will fall through to generating a new cache entry below\n            } else {\n              // We have a valid cache entry so we will be returning it. We also check to see if we need\n              // to background revalidate it by checking if it is stale.\n              const cachedResponse =\n                cacheEntry.value.data.body !== undefined\n                  ? JSON.parse(cacheEntry.value.data.body)\n                  : undefined\n              if (cacheEntry.isStale) {\n                // In App Router we return the stale result and revalidate in the background\n                if (!workStore.pendingRevalidates) {\n                  workStore.pendingRevalidates = {}\n                }\n\n                // We run the cache function asynchronously and save the result when it completes\n                workStore.pendingRevalidates[invocationKey] =\n                  workUnitAsyncStorage\n                    .run(innerCacheStore, cb, ...args)\n                    .then((result) => {\n                      return cacheNewResult(\n                        result,\n                        incrementalCache,\n                        cacheKey,\n                        tags,\n                        options.revalidate,\n                        fetchIdx,\n                        fetchUrl\n                      )\n                    })\n                    // @TODO This error handling seems wrong. We swallow the error?\n                    .catch((err) =>\n                      console.error(\n                        `revalidating cache with key: ${invocationKey}`,\n                        err\n                      )\n                    )\n              }\n              // We had a valid cache entry so we return it here\n              return cachedResponse\n            }\n          }\n        }\n\n        // If we got this far then we had an invalid cache entry and need to generate a new one\n        const result = await workUnitAsyncStorage.run(\n          innerCacheStore,\n          cb,\n          ...args\n        )\n\n        if (!workStore.isDraftMode) {\n          if (!workStore.pendingRevalidates) {\n            workStore.pendingRevalidates = {}\n          }\n\n          // We need to push the cache result promise to pending\n          // revalidates otherwise it won't be awaited and is just\n          // dangling\n          workStore.pendingRevalidates[invocationKey] = cacheNewResult(\n            result,\n            incrementalCache,\n            cacheKey,\n            tags,\n            options.revalidate,\n            fetchIdx,\n            fetchUrl\n          )\n        }\n\n        return result\n      } else {\n        noStoreFetchIdx += 1\n        // We are in Pages Router or were called outside of a render. We don't have a store\n        // so we just call the callback directly when it needs to run.\n        // If the entry is fresh we return it. If the entry is stale we return it but revalidate the entry in\n        // the background. If the entry is missing or invalid we generate a new entry and return it.\n\n        if (!incrementalCache.isOnDemandRevalidate) {\n          // We aren't doing an on demand revalidation so we check use the cache if valid\n          const cacheEntry = await incrementalCache.get(cacheKey, {\n            kind: IncrementalCacheKind.FETCH,\n            revalidate: options.revalidate,\n            tags,\n            fetchIdx,\n            fetchUrl,\n            softTags: implicitTags?.tags,\n          })\n\n          if (cacheEntry && cacheEntry.value) {\n            // The entry exists and has a value\n            if (cacheEntry.value.kind !== CachedRouteKind.FETCH) {\n              // The entry is invalid and we need a special warning\n              // @TODO why do we warn this way? Should this just be an error? How are these errors surfaced\n              // so bugs can be reported\n              console.error(\n                `Invariant invalid cacheEntry returned for ${invocationKey}`\n              )\n              // will fall through to generating a new cache entry below\n            } else if (!cacheEntry.isStale) {\n              // We have a valid cache entry and it is fresh so we return it\n              return cacheEntry.value.data.body !== undefined\n                ? JSON.parse(cacheEntry.value.data.body)\n                : undefined\n            }\n          }\n        }\n\n        // If we got this far then we had an invalid cache entry and need to generate a new one\n        const result = await workUnitAsyncStorage.run(\n          innerCacheStore,\n          cb,\n          ...args\n        )\n\n        // we need to wait setting the new cache result here as\n        // we don't have pending revalidates on workStore to\n        // push to and we can't have a dangling promise\n        await cacheNewResult(\n          result,\n          incrementalCache,\n          cacheKey,\n          tags,\n          options.revalidate,\n          fetchIdx,\n          fetchUrl\n        )\n        return result\n      }\n    } finally {\n      if (cacheSignal) {\n        cacheSignal.endRead()\n      }\n    }\n  }\n  // TODO: once AsyncLocalStorage.run() returns the correct types this override will no longer be necessary\n  return cachedCb as unknown as T\n}\n\nfunction getFetchUrlPrefix(\n  workStore: WorkStore,\n  workUnitStore: WorkUnitStore\n): string {\n  switch (workUnitStore.type) {\n    case 'request':\n      const pathname = workUnitStore.url.pathname\n      const searchParams = new URLSearchParams(workUnitStore.url.search)\n\n      const sortedSearch = [...searchParams.keys()]\n        .sort((a, b) => a.localeCompare(b))\n        .map((key) => `${key}=${searchParams.get(key)}`)\n        .join('&')\n\n      return `${pathname}${sortedSearch.length ? '?' : ''}${sortedSearch}`\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return workStore.route\n    default:\n      return workUnitStore satisfies never\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\n/**\n * @deprecated Use `sortSortableRoutes` or `sortPages` instead.\n */\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\n/**\n * @deprecated Use `sortSortableRouteObjects` or `sortPageObjects` instead.\n */\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","export { getSortedRoutes, getSortedRouteObjects } from './sorted-routes'\nexport { isDynamicRoute } from './is-dynamic'\n","import {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  postponeWithTracking,\n} from '../../app-render/dynamic-rendering'\nimport { isDynamicRoute } from '../../../shared/lib/router/utils'\nimport {\n  NEXT_CACHE_IMPLICIT_TAG_ID,\n  NEXT_CACHE_SOFT_TAG_MAX_LENGTH,\n} from '../../../lib/constants'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external'\nimport { DynamicServerError } from '../../../client/components/hooks-server-context'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific cache tag.\n *\n * Read more: [Next.js Docs: `revalidateTag`](https://nextjs.org/docs/app/api-reference/functions/revalidateTag)\n */\nexport function revalidateTag(tag: string) {\n  return revalidate([tag], `revalidateTag ${tag}`)\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific path.\n *\n * Read more: [Next.js Docs: `unstable_expirePath`](https://nextjs.org/docs/app/api-reference/functions/unstable_expirePath)\n */\nexport function unstable_expirePath(\n  originalPath: string,\n  type?: 'layout' | 'page'\n) {\n  if (originalPath.length > NEXT_CACHE_SOFT_TAG_MAX_LENGTH) {\n    console.warn(\n      `Warning: expirePath received \"${originalPath}\" which exceeded max length of ${NEXT_CACHE_SOFT_TAG_MAX_LENGTH}. See more info here https://nextjs.org/docs/app/api-reference/functions/unstable_expirePath`\n    )\n    return\n  }\n\n  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath}`\n\n  if (type) {\n    normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`\n  } else if (isDynamicRoute(originalPath)) {\n    console.warn(\n      `Warning: a dynamic page path \"${originalPath}\" was passed to \"expirePath\", but the \"type\" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/unstable_expirePath`\n    )\n  }\n  return revalidate([normalizedPath], `unstable_expirePath ${originalPath}`)\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific cache tag.\n *\n * Read more: [Next.js Docs: `unstable_expireTag`](https://nextjs.org/docs/app/api-reference/functions/unstable_expireTag)\n */\nexport function unstable_expireTag(...tags: string[]) {\n  return revalidate(tags, `unstable_expireTag ${tags.join(', ')}`)\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific path.\n *\n * Read more: [Next.js Docs: `revalidatePath`](https://nextjs.org/docs/app/api-reference/functions/revalidatePath)\n */\nexport function revalidatePath(originalPath: string, type?: 'layout' | 'page') {\n  if (originalPath.length > NEXT_CACHE_SOFT_TAG_MAX_LENGTH) {\n    console.warn(\n      `Warning: revalidatePath received \"${originalPath}\" which exceeded max length of ${NEXT_CACHE_SOFT_TAG_MAX_LENGTH}. See more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n    return\n  }\n\n  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath}`\n\n  if (type) {\n    normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`\n  } else if (isDynamicRoute(originalPath)) {\n    console.warn(\n      `Warning: a dynamic page path \"${originalPath}\" was passed to \"revalidatePath\", but the \"type\" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n  }\n  return revalidate([normalizedPath], `revalidatePath ${originalPath}`)\n}\n\nfunction revalidate(tags: string[], expression: string) {\n  const store = workAsyncStorage.getStore()\n  if (!store || !store.incrementalCache) {\n    throw new Error(\n      `Invariant: static generation store missing in ${expression}`\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.phase === 'render') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" during render which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'private-cache':\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside a \"use cache\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n        )\n      case 'unstable-cache':\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n        )\n      case 'prerender':\n      case 'prerender-runtime':\n        // cacheComponents Prerender\n        const error = new Error(\n          `Route ${store.route} used ${expression} without first calling \\`await connection()\\`.`\n        )\n        return abortAndThrowOnSynchronousRequestDataAccess(\n          store.route,\n          expression,\n          error,\n          workUnitStore\n        )\n      case 'prerender-client':\n        throw new InvariantError(\n          `${expression} must not be used within a client component. Next.js should be preventing ${expression} from being included in client components statically, but did not in this case.`\n        )\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          // TODO: This is most likely incorrect. It would lead to the ISR\n          // status being flipped when revalidating a static page with a server\n          // action.\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  if (!store.pendingRevalidatedTags) {\n    store.pendingRevalidatedTags = []\n  }\n\n  for (const tag of tags) {\n    if (!store.pendingRevalidatedTags.includes(tag)) {\n      store.pendingRevalidatedTags.push(tag)\n    }\n  }\n\n  // TODO: only revalidate if the path matches\n  store.pathWasRevalidated = true\n}\n","import { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external'\nimport { markCurrentScopeAsDynamic } from '../../app-render/dynamic-rendering'\n\n/**\n * This function can be used to declaratively opt out of static rendering and indicate a particular component should not be cached.\n *\n * It marks the current scope as dynamic.\n *\n * - In [non-PPR](https://nextjs.org/docs/app/api-reference/next-config-js/partial-prerendering) cases this will make a static render\n * halt and mark the page as dynamic.\n * - In PPR cases this will postpone the render at this location.\n *\n * If we are inside a cache scope then this function does nothing.\n *\n * @note It expects to be called within App Router and will error otherwise.\n *\n * Read more: [Next.js Docs: `unstable_noStore`](https://nextjs.org/docs/app/api-reference/functions/unstable_noStore)\n */\nexport function unstable_noStore() {\n  const callingExpression = 'unstable_noStore()'\n  const store = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (!store) {\n    // This generally implies we are being called in Pages router. We should probably not support\n    // unstable_noStore in contexts outside of `react-server` condition but since we historically\n    // have not errored here previously, we maintain that behavior for now.\n    return\n  } else if (store.forceStatic) {\n    return\n  } else {\n    store.isUnstableNoStore = true\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-runtime':\n          // unstable_noStore() is a noop in Dynamic I/O.\n          return\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n    markCurrentScopeAsDynamic(store, workUnitStore, callingExpression)\n  }\n}\n","import { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\n\nexport type CacheLife = {\n  // How long the client can cache a value without checking with the server.\n  stale?: number\n  // How frequently you want the cache to refresh on the server.\n  // Stale values may be served while revalidating.\n  revalidate?: number\n  // In the worst case scenario, where you haven't had traffic in a while,\n  // how stale can a value be until you prefer deopting to dynamic.\n  // Must be longer than revalidate.\n  expire?: number\n}\n// The equivalent header is kind of like:\n// Cache-Control: max-age=[stale],s-max-age=[revalidate],stale-while-revalidate=[expire-revalidate],stale-if-error=[expire-revalidate]\n// Except that stale-while-revalidate/stale-if-error only applies to shared caches - not private caches.\n\n// The default revalidates relatively frequently but doesn't expire to ensure it's always\n// able to serve fast results but by default doesn't hang.\n\n// This gets overridden by the next-types-plugin\ntype CacheLifeProfiles =\n  | 'default'\n  | 'seconds'\n  | 'minutes'\n  | 'hours'\n  | 'days'\n  | 'weeks'\n  | 'max'\n  | (string & {})\n\nfunction validateCacheLife(profile: CacheLife) {\n  if (profile.stale !== undefined) {\n    if ((profile.stale as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you want to cache on the client forever ' +\n          'without checking with the server.'\n      )\n    } else if (typeof profile.stale !== 'number') {\n      throw new Error('The stale option must be a number of seconds.')\n    }\n  }\n  if (profile.revalidate !== undefined) {\n    if ((profile.revalidate as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you do not want to revalidate by time.'\n      )\n    } else if (typeof profile.revalidate !== 'number') {\n      throw new Error('The revalidate option must be a number of seconds.')\n    }\n  }\n  if (profile.expire !== undefined) {\n    if ((profile.expire as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you want to cache on the server forever ' +\n          'without checking with the origin.'\n      )\n    } else if (typeof profile.expire !== 'number') {\n      throw new Error('The expire option must be a number of seconds.')\n    }\n  }\n\n  if (profile.revalidate !== undefined && profile.expire !== undefined) {\n    if (profile.revalidate > profile.expire) {\n      throw new Error(\n        'If providing both the revalidate and expire options, ' +\n          'the expire option must be greater than the revalidate option. ' +\n          'The expire option indicates how many seconds from the start ' +\n          'until it can no longer be used.'\n      )\n    }\n  }\n\n  if (profile.stale !== undefined && profile.expire !== undefined) {\n    if (profile.stale > profile.expire) {\n      throw new Error(\n        'If providing both the stale and expire options, ' +\n          'the expire option must be greater than the stale option. ' +\n          'The expire option indicates how many seconds from the start ' +\n          'until it can no longer be used.'\n      )\n    }\n  }\n}\n\nexport function cacheLife(profile: CacheLifeProfiles | CacheLife): void {\n  if (!process.env.__NEXT_USE_CACHE) {\n    throw new Error(\n      'cacheLife() is only available with the experimental.useCache config.'\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  switch (workUnitStore?.type) {\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'unstable-cache':\n    case undefined:\n      throw new Error(\n        'cacheLife() can only be called inside a \"use cache\" function.'\n      )\n    case 'cache':\n    case 'private-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n\n  if (typeof profile === 'string') {\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) {\n      throw new Error(\n        'cacheLife() can only be called during App Router rendering at the moment.'\n      )\n    }\n    if (!workStore.cacheLifeProfiles) {\n      throw new Error(\n        'cacheLifeProfiles should always be provided. This is a bug in Next.js.'\n      )\n    }\n\n    // TODO: This should be globally available and not require an AsyncLocalStorage.\n    const configuredProfile = workStore.cacheLifeProfiles[profile]\n    if (configuredProfile === undefined) {\n      if (workStore.cacheLifeProfiles[profile.trim()]) {\n        throw new Error(\n          `Unknown cacheLife profile \"${profile}\" is not configured in next.config.js\\n` +\n            `Did you mean \"${profile.trim()}\" without the spaces?`\n        )\n      }\n      throw new Error(\n        `Unknown cacheLife profile \"${profile}\" is not configured in next.config.js\\n` +\n          'module.exports = {\\n' +\n          '  experimental: {\\n' +\n          '    cacheLife: {\\n' +\n          `      \"${profile}\": ...\\n` +\n          '    }\\n' +\n          '  }\\n' +\n          '}'\n      )\n    }\n    profile = configuredProfile\n  } else if (\n    typeof profile !== 'object' ||\n    profile === null ||\n    Array.isArray(profile)\n  ) {\n    throw new Error(\n      'Invalid cacheLife() option. Either pass a profile name or object.'\n    )\n  } else {\n    validateCacheLife(profile)\n  }\n\n  if (profile.revalidate !== undefined) {\n    // Track the explicit revalidate time.\n    if (\n      workUnitStore.explicitRevalidate === undefined ||\n      workUnitStore.explicitRevalidate > profile.revalidate\n    ) {\n      workUnitStore.explicitRevalidate = profile.revalidate\n    }\n  }\n  if (profile.expire !== undefined) {\n    // Track the explicit expire time.\n    if (\n      workUnitStore.explicitExpire === undefined ||\n      workUnitStore.explicitExpire > profile.expire\n    ) {\n      workUnitStore.explicitExpire = profile.expire\n    }\n  }\n  if (profile.stale !== undefined) {\n    // Track the explicit stale time.\n    if (\n      workUnitStore.explicitStale === undefined ||\n      workUnitStore.explicitStale > profile.stale\n    ) {\n      workUnitStore.explicitStale = profile.stale\n    }\n  }\n}\n","import { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { validateTags } from '../lib/patch-fetch'\n\nexport function cacheTag(...tags: string[]): void {\n  if (!process.env.__NEXT_USE_CACHE) {\n    throw new Error(\n      'cacheTag() is only available with the experimental.useCache config.'\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  switch (workUnitStore?.type) {\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'unstable-cache':\n    case undefined:\n      throw new Error(\n        'cacheTag() can only be called inside a \"use cache\" function.'\n      )\n    case 'cache':\n    case 'private-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n\n  const validTags = validateTags(tags, 'cacheTag()')\n\n  if (!workUnitStore.tags) {\n    workUnitStore.tags = validTags\n  } else {\n    workUnitStore.tags.push(...validTags)\n  }\n}\n","const cacheExports = {\n  unstable_cache: require('next/dist/server/web/spec-extension/unstable-cache')\n    .unstable_cache,\n\n  revalidateTag: require('next/dist/server/web/spec-extension/revalidate')\n    .revalidateTag,\n  revalidatePath: require('next/dist/server/web/spec-extension/revalidate')\n    .revalidatePath,\n\n  unstable_expireTag: require('next/dist/server/web/spec-extension/revalidate')\n    .unstable_expireTag,\n  unstable_expirePath: require('next/dist/server/web/spec-extension/revalidate')\n    .unstable_expirePath,\n\n  unstable_noStore:\n    require('next/dist/server/web/spec-extension/unstable-no-store')\n      .unstable_noStore,\n  unstable_cacheLife: require('next/dist/server/use-cache/cache-life')\n    .cacheLife,\n  unstable_cacheTag: require('next/dist/server/use-cache/cache-tag').cacheTag,\n}\n\n// https://nodejs.org/api/esm.html#commonjs-namespaces\n// When importing CommonJS modules, the module.exports object is provided as the default export\nmodule.exports = cacheExports\n\n// make import { xxx } from 'next/cache' work\nexports.unstable_cache = cacheExports.unstable_cache\nexports.revalidatePath = cacheExports.revalidatePath\nexports.revalidateTag = cacheExports.revalidateTag\nexports.unstable_expireTag = cacheExports.unstable_expireTag\nexports.unstable_expirePath = cacheExports.unstable_expirePath\nexports.unstable_noStore = cacheExports.unstable_noStore\nexports.unstable_cacheLife = cacheExports.unstable_cacheLife\nexports.unstable_cacheTag = cacheExports.unstable_cacheTag\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next-runtime-env/build/provider/use-env-context.js\"));\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n","'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n","module.exports = require('./dist/client/script')\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider.jsx\",\n    \"Providers\",\n);\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.jsx%22,%22import%22:%22Sarabun%22,%22arguments%22:[{%22subsets%22:[%22thai%22],%22weight%22:[%22100%22,%22200%22,%22300%22,%22400%22,%22500%22,%22600%22,%22700%22,%22800%22],%22display%22:%22swap%22}],%22variableName%22:%22sarabun%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Sarabun', 'Sarabun Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import { Sarabun } from \"next/font/google\";\nimport \"./globals.css\";\nimport { PublicEnvScript } from \"next-runtime-env\";\nimport { Providers } from \"./provider\";\n\nconst sarabun = Sarabun({\n  subsets: [\"thai\"],\n  weight: [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\"],\n  display: \"swap\",\n});\n\nexport const metadata = {\n  title: \"Medical Record Audit\",\n  description: process.env.NEXT_PUBLIC_APP_DESCRIPTION,\n  manifest: process.env.NEXT_PUBLIC_BASE_PATH + '/manifest.json',\n  icons: {\n    icon: [\n      {\n        url: process.env.NEXT_PUBLIC_BASE_PATH\n        ? process.env.NEXT_PUBLIC_BASE_PATH + '/' + process.env.NEXT_PUBLIC_URL_APP_ICON_192\n        : process.env.NEXT_PUBLIC_URL_APP_ICON_192,\n        href: process.env.NEXT_PUBLIC_BASE_PATH\n        ? process.env.NEXT_PUBLIC_BASE_PATH + '/' + process.env.NEXT_PUBLIC_URL_APP_ICON_192\n        : process.env.NEXT_PUBLIC_URL_APP_ICON_192,\n      }\n    ]\n  },\n};\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"th\">\n      <head>\n        <PublicEnvScript />\n      </head>\n      <body className={sarabun.className}>\n        <Providers>\n          {children}\n        </Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":["ACTION_SUFFIX","APP_DIR_ALIAS","CACHE_ONE_YEAR","DOT_NEXT_ALIAS","ESLINT_DEFAULT_DIRS","GSP_NO_RETURNED_VALUE","GSSP_COMPONENT_MEMBER_ERROR","GSSP_NO_RETURNED_VALUE","HTML_CONTENT_TYPE_HEADER","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","JSON_CONTENT_TYPE_HEADER","MATCHED_PATH_HEADER","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","NEXT_BODY_SUFFIX","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_DATA_SUFFIX","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_META_SUFFIX","NEXT_QUERY_PARAM_PREFIX","NEXT_RESUME_HEADER","NON_STANDARD_NODE_ENV","PAGES_DIR_ALIAS","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","PUBLIC_DIR_MIDDLEWARE_CONFLICT","ROOT_DIR_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","SERVER_PROPS_EXPORT_ERROR","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SERVER_RUNTIME","SSG_FALLBACK_EXPORT_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","TEXT_PLAIN_CONTENT_TYPE_HEADER","UNSTABLE_REVALIDATE_RENAME_ERROR","WEBPACK_LAYERS","WEBPACK_RESOURCE_QUERIES","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","edgeSSREntry","metadata","metadataRoute","metadataImageMeta","cloneResponse","noop","registry","globalThis","FinalizationRegistry","weakRef","stream","deref","locked","cancel","then","original","body","body1","body2","tee","cloned1","Response","status","statusText","headers","Object","defineProperty","value","url","configurable","enumerable","writable","register","WeakRef","cloned2","createDedupeFetch","simpleCacheKey","generateCacheKey","request","JSON","stringify","method","Array","from","entries","mode","redirect","credentials","referrer","referrerPolicy","integrity","originalFetch","getCacheEntries","React","cache","dedupeFetch","resource","options","signal","cacheKey","URL","Request","keepalive","cacheEntries","i","j","length","key","promise","response","InvariantError","entry","push","CachedRouteKind","IncrementalCacheKind","Batcher","cacheKeyFn","schedulerFn","fn","pending","Map","create","batch","Promise","resolve","get","reject","DetachedPromise","set","result","err","delete","NEXT_REQUEST_META","addRequestMeta","getRequestMeta","removeRequestMeta","setRequestMeta","Symbol","for","req","meta","fromNodeOutgoingHttpHeaders","normalizeNextQueryParam","splitCookiesString","toNodeOutgoingHttpHeaders","validateURL","nodeHeaders","Headers","values","isArray","v","toString","append","cookiesString","cookiesStrings","pos","start","ch","lastComma","nextStart","cookiesSeparatorFound","skipWhitespace","test","charAt","notSpecialChar","substring","cookies","toLowerCase","String","error","Error","cause","prefixes","prefix","startsWith","detectDomainLocale","domainItems","hostname","detectedLocale","item","domainHostname","domain","split","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","undefined","hash","slice","addPathPrefix","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","lower","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","host","normalizeLocalePath","WeakMap","lowercasedLocales","map","segments","segment","index","removePathPrefix","withoutPrefix","getNextPathnameInfo","i18n","nextConfig","pathnameNoDataPrefix","paths","join","parseData","i18nProvider","analyze","NextURL","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","constructor","input","baseOrOpts","opts","process","env","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","includes","TypeError","searchParams","port","protocol","href","origin","password","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","page","RequestCookies","ResponseCookies","stringifyCookie","INTERNALS","NextRequest","init","NEXT_RUNTIME","duplex","nextUrl","bodyUsed","destination","fromEntries","ua","isNodeNextRequest","isNodeNextResponse","isWebNextRequest","isWebNextResponse","res","NextRequestAdapter","ResponseAborted","ResponseAbortedName","createAbortController","signalFromNodeResponse","name","controller","AbortController","once","writableFinished","abort","errored","destroyed","AbortSignal","fromBaseNextRequest","fromWebNextRequest","fromNodeNextRequest","aborted","getClientComponentLoaderMetrics","wrapClientComponentLoader","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","ComponentMod","__next_app__","require","args","startTime","performance","now","loadChunk","finally","metrics","reset","isAbortError","pipeToNodeResponse","e","createWriterFromResponse","waitUntilForEnd","started","drained","onDrain","on","off","finished","WritableStream","write","chunk","NEXT_OTEL_PERFORMANCE_PREFIX","measure","end","flushHeaders","getTracer","trace","NextNodeServerSpan","startResponse","spanName","ok","flush","destroy","close","readable","writer","pipeTo","RenderResult","EMPTY","contentType","fromStatic","waitUntil","assignMetadata","assign","isNull","isDynamic","toUnchunkedString","streamToString","ReadableStream","streamFromString","Buffer","isBuffer","streamFromBuffer","chainStreams","coerce","unshift","preventClose","RouteKind","fromResponseCacheEntry","routeKindToIncrementalCacheKind","toResponseCacheEntry","cacheEntry","kind","PAGES","html","pageData","APP_PAGE","postponed","rscData","segmentData","isMiss","isStale","cacheControl","routeKind","IMAGE","APP_ROUTE","PAGES_API","ResponseCache","minimal_mode","batcher","isOnDemandRevalidate","scheduleOnNextTick","responseGenerator","context","hasResolved","previousCacheEntry","incrementalCache","isFallback","isRoutePPREnabled","prom","previousCacheItem","expiresAt","Date","resolved","cachedResponse","isPrefetch","isRevalidating","resolveValue","newRevalidate","Math","min","max","revalidate","newExpire","expire","console","NEXT_PATCH_SYMBOL","createPatchedFetcher","patchFetch","validateRevalidate","validateTags","isEdgeRuntime","isFetchPatched","revalidateVal","normalizedRevalidate","isNaN","message","tags","description","validTags","invalidTags","tag","reason","warn","log","trackFetchMetric","workStore","ctx","shouldTrackFetchMetrics","fetchMetrics","timeOrigin","idx","nextFetchId","createCachedPrerenderResponse","incrementalCacheContext","handleUnlock","bodyBuffer","arrayBuffer","fetchedData","FETCH","data","createCachedDynamicResponse","serverComponentsHmrCache","cacheSetPromise","catch","pendingRevalidateKey","pendingRevalidates","originFetch","workAsyncStorage","workUnitAsyncStorage","patched","fetch","fetchUrl","toUpperCase","isInternal","next","internal","hideSpan","NEXT_OTEL_FETCH_DISABLED","fetchStart","getStore","workUnitStore","cacheSignal","getCacheSignal","beginRead","internalFetch","AppRenderSpan","SpanKind","CLIENT","filter","Boolean","attributes","isDraftMode","isRequestInput","field","finalRevalidate","getNextField","originalFetchRevalidate","currentFetchRevalidate","revalidateStore","type","collectedTags","implicitTags","pageFetchCacheMode","fetchCache","isUsingNoStore","isUnstableNoStore","currentFetchCacheConfig","cacheReason","cacheWarning","isConflictingRevalidate","hasExplicitFetchCacheOptOut","noFetchConfigAndForceDynamic","forceDynamic","_headers","initHeaders","hasUnCacheableHeader","isUnCacheableMethod","hasNoExplicitCacheConfig","autoNoCache","isImplicitBuildTimeCache","isBuildTimePrerendering","endRead","makeHangingPromise","renderSignal","forceStatic","markCurrentScopeAsDynamic","isCacheableRevalidate","isHmrRefresh","fetchIdx","doOriginalFetch","cacheReasonOverride","requestInputFields","reqInput","reqOptions","_ogBody","otherInput","clonedInit","fetchType","cacheStatus","incrementalCacheConfig","isForegroundRevalidate","isHmrRefreshCache","cachedFetchData","lock","softTags","waitAtLeastOneReactRenderTask","isRevalidate","pendingRevalidate","isStaticGeneration","hasNextConfig","revalidatedResult","pendingResponse","responses","__nextPatched","__nextGetStaticStore","_nextOriginalFetch","unstable_cache","noStoreFetchIdx","cacheNewResult","cb","keyParts","fixedKey","cachedCb","maybeIncrementalCache","__incrementalCache","fetchUrlPrefix","getFetchUrlPrefix","invocationKey","innerCacheStore","phase","draftMode","getDraftModeProviderForCacheScope","isNestedUnstableCache","parse","run","URLSearchParams","sortedSearch","keys","sort","a","b","localeCompare","getSortedRouteObjects","getSortedRoutes","UrlNode","insert","urlPath","_insert","smoosh","_smoosh","childrenPaths","children","slugName","splice","restSlugName","optionalRestSlugName","routes","c","reduce","prev","curr","placeholder","r","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","forEach","slug","has","normalizedPages","root","pagePath","objects","getter","indexes","pathnames","sorted","INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","find","m","interceptingRoute","marker","interceptedRoute","normalizeAppPath","concat","splitInterceptingRoute","isDynamicRoute","TEST_ROUTE","TEST_STRICT_ROUTE","strict","revalidatePath","revalidateTag","unstable_expirePath","unstable_expireTag","originalPath","normalizedPath","expression","store","abortAndThrowOnSynchronousRequestDataAccess","postponeWithTracking","dynamicTracking","DynamicServerError","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","pendingRevalidatedTags","pathWasRevalidated","unstable_noStore","callingExpression","cacheLife","validateCacheLife","profile","stale","__NEXT_USE_CACHE","cacheLifeProfiles","configuredProfile","trim","explicitRevalidate","explicitExpire","explicitStale","cacheTag","handleClientScriptLoad","initScriptLoader","ScriptCache","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","stylesheet","as","window","head","document","link","createElement","rel","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","strategy","onError","add","afterLoad","el","loadPromise","addEventListener","call","innerHTML","__html","textContent","setAttributesFromProps","setAttribute","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","styleSrc","preload","crossOrigin"],"mappings":"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C,C,A,E,K,E,iB,C,C,C,S,C,C,E,E,A,G,A,E,gB,A,G,C,A,C,G,E,C,E,E,E,U,A,G,C,A,G,G,C,E,E,G,E,E,W,C,C,G,C,E,O,E,C,E,A,C,A,C,G,cCjC1D,GAAM,yBAAE,CAAuB,CAAE,CAAA,EAAA,CAAA,CAAA,OAEjC,EAAsB,CAAC,CAAC,EAAwB,mHAFhD,GAAM,yBAAE,CAAuB,CAAE,CAAA,EAAA,CAAA,CAAA,OAEjC,EAAsB,CAAC,CAAC,EAAwB,uK,O,c,C,E,a,qE,I,E,E,C,C,E,K,O,c,C,E,c,C,W,G,I,W,O,E,W,C,G,A,I,E,E,C,C,O,E,K,c,C,E,oB,C,Y,E,I,W,O,E,iB,C,G,A,I,E,E,C,C,K,E,O,c,C,E,gB,C,Y,E,I,W,O,E,a,C,G,uG,E,c,C,O,C,+E,E,S,C,E,O,E,C,M,A,A,C,C,C,E,C,C,A,A,M,C,E,W,I,M,C,Y,c,C,C,C,0B,E,G,C,E,I,G,A,C,E,A,G,C,E,E,S,A,G,C,C,A,G,C,E,C,S,C,c,C,C,C,C,I,A,K,C,C,sB,E,E,C,qD,C,C,C,A,O,M,C,E,c,C,C,E,A,C,A,A,A,M,C,E,E,gB,A,G,C,A,O,C,G,C,E,A,C,A,A,C,I,E,E,C,C,O,E,E,C,C,O,E,A,E,C,C,wBCFhD,GAAM,yBAAE,CAAuB,CAAE,CAAA,EAAA,CAAA,CAAA,OAEjC,EAAsB,CAAC,CAAC,EAAwB,2FAFhD,GAAM,yBAAE,CAAuB,CAAE,CAAA,EAAA,CAAA,CAAA,OAEjC,EAAsB,CAAC,CAAC,EAAwB,kIEHhD,EAAO,OAAO,CAAA,EAAA,CAAA,CAAA,2M,E,E,E,C,C,Q,E,E,C,C,O,E,S,C,C,C,I,C,K,E,C,mB,G,C,C,Y,G,G,C,Q,C,mB,C,C,E,E,I,E,Q,C,C,A,A,C,M,I,C,C,C,C,C,A,I,E,A,C,M,A,C,C,Q,E,E,c,C,K,E,I,C,S,C,G,A,C,A,C,C,O,A,E,C,E,E,G,E,K,E,C,C,C,K,C,E,S,c,C,C,E,C,A,C,E,E,A,G,E,E,O,C,C,G,C,C,K,C,E,S,c,C,C,E,A,C,A,C,A,I,mH,E,E,C,C,O,E,E,C,C,O,E,E,C,C,A,M,G,e,C,C,C,M,C,S,U,C,iB,C,C,E,E,A,C,E,E,gB,A,G,C,A,C,G,E,C,E,E,E,U,A,G,C,A,G,G,C,E,E,G,E,E,S,C,C,G,C,E,K,C,C,C,G,c,C,E,e,A,C,C,E,A,C,A,C,A,U,oB,O,c,C,E,a,wE,I,E,E,C,C,O,O,c,C,E,iB,C,Y,E,I,W,O,E,c,C,G,A,I,E,E,C,C,O,M,C,c,C,E,M,C,W,G,I,W,O,E,G,C,G,A,I,E,E,C,C,O,O,c,C,E,Y,C,Y,E,I,W,O,E,S,C,G,A,I,E,E,C,C,M,C,M,c,C,E,kB,C,W,G,I,W,O,E,e,C,G,8B,O,c,C,E,a,8P,G,K,C,Q,C,C,C,U,E,O,E,C,C,C,A,E,G,A,C,C,C,C,O,E,E,C,A,W,E,G,G,E,E,C,E,C,C,E,S,E,C,G,A,C,A,C,A,C,C,C,E,C,C,E,C,E,E,A,A,E,E,A,E,E,C,A,Q,C,C,C,G,E,A,C,C,C,C,C,A,C,O,C,E,E,C,E,G,C,C,A,E,E,C,I,E,C,G,E,C,C,E,C,E,E,E,C,C,C,A,C,E,C,E,C,C,A,C,C,C,A,A,A,C,A,C,A,C,E,E,A,E,A,C,A,E,C,A,C,G,C,E,C,C,C,E,C,C,C,E,C,C,A,C,G,G,C,E,E,C,C,I,C,C,A,M,C,E,E,C,C,A,E,E,E,A,C,E,C,C,A,A,C,C,C,C,A,C,C,C,A,C,C,A,C,I,C,E,A,C,E,A,C,C,C,C,I,E,C,C,O,C,C,A,C,K,C,A,E,I,C,E,E,G,I,E,C,U,C,iB,C,C,M,C,A,E,G,C,E,E,G,I,E,C,U,C,iB,C,C,M,C,A,E,M,C,E,E,G,C,C,E,E,C,U,C,C,A,C,K,C,A,E,S,C,E,E,G,C,C,E,E,C,U,C,C,A,C,K,C,A,E,O,C,E,E,G,C,C,E,E,C,U,C,C,A,C,K,C,A,E,M,C,E,E,G,C,C,E,E,C,U,C,C,A,C,K,C,A,E,a,C,E,E,G,I,E,C,U,C,C,M,C,A,E,K,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,G,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,K,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,M,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,I,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,O,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,M,C,E,E,G,I,iB,C,U,C,C,M,C,A,E,I,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,K,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,I,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,O,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,K,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,O,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,Q,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,M,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,S,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,M,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,A,E,O,C,E,E,G,C,C,E,G,C,U,C,C,A,C,K,C,gH,E,K,C,E,M,C,A,C,C,C,E,A,E,O,C,C,C,E,C,C,C,C,C,C,C,C,C,E,K,E,A,C,C,C,C,C,E,M,C,E,A,E,C,C,C,C,C,C,C,C,C,E,K,E,A,C,C,C,C,C,E,M,C,E,A,E,C,C,C,C,C,C,C,E,C,E,M,C,A,C,C,C,E,A,E,O,C,C,C,E,C,C,C,E,C,A,C,C,E,C,C,K,E,E,Q,C,C,K,C,C,E,E,G,A,E,C,E,E,I,A,E,G,C,C,C,I,C,C,E,E,M,A,E,C,E,E,I,A,E,G,C,C,C,I,C,C,E,E,K,A,E,C,E,E,I,A,E,G,C,C,C,K,C,C,E,E,K,A,E,C,E,E,I,A,E,G,C,C,C,C,A,E,Y,C,C,M,C,I,I,C,C,E,C,I,C,E,C,I,C,E,C,K,C,E,C,C,A,I,E,C,G,C,K,C,C,G,C,M,C,K,C,O,C,C,A,S,E,C,C,C,C,C,E,E,C,U,E,M,C,C,C,G,C,C,C,A,C,E,E,Y,C,E,C,E,K,O,C,E,C,C,C,G,E,A,I,E,K,E,C,C,C,C,A,C,K,C,A,C,A,C,E,E,M,C,E,C,A,O,A,C,E,C,C,C,E,E,C,C,E,A,A,K,E,M,C,C,K,C,A,C,gF,E,a,C,E,O,A,C,C,C,E,E,M,A,E,A,C,M,E,C,C,E,C,E,E,A,C,C,C,C,G,C,A,G,C,C,A,E,A,G,A,C,C,A,E,C,C,A,C,C,E,C,C,E,K,S,E,C,C,C,E,E,C,C,O,C,G,C,E,C,A,C,U,C,E,E,I,A,E,C,wC,E,E,C,6B,C,C,G,I,C,C,U,C,I,C,G,C,A,C,C,C,A,E,I,A,E,C,sB,E,E,C,kB,C,C,G,I,A,C,C,A,C,Q,I,E,E,C,A,C,A,O,C,G,C,E,C,O,C,A,G,C,E,C,A,A,C,E,E,K,A,E,C,+B,E,E,C,C,C,E,C,I,C,C,yB,I,E,E,C,E,E,C,C,e,E,C,O,M,C,S,C,C,C,C,C,C,C,2b,E,E,C,C,O,G,E,E,C,C,A,O,G,I,E,A,E,C,C,O,I,G,c,C,E,gB,C,Y,E,I,W,O,E,a,C,G,iDCEP,IAAM,EAAY,CAAA,EADzB,AACyB,EADzB,CAAA,CAAA,OACyB,uBAAA,AAAuB,EAC5C,WAAa,MAAM,AAAI,MAAM,gOAAkO,EAC/P,qDACA,6DAHG,IAAM,EAAY,CAAA,EADzB,AACyB,EADzB,CAAA,CAAA,OACyB,uBAAA,AAAuB,EAC5C,WAAa,MAAM,AAAI,MAAM,gOAAkO,EAC/P,iCACA,6JCLJ,EAAA,EAAA,CAAA,CAAA,OACA,IAAM,EAAW,CACb,UAAW,EAAA,OAAS,CAAC,SAAS,CAC9B,MAAO,CACH,WAAY,gCACZ,UAAW,QAEf,CACJ,CAE0B,MAAM,CAA5B,EAAA,OAAS,CAAC,QAAQ,GAClB,EAAS,QAAQ,CAAG,EAAA,OAAS,CAAC,QAAA,AAAQ,ECT1C,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAQO,IAAM,EAAW,CACtB,MAAO,uBACP,WAAW,CAAA,sCACX,SAAU,qBACV,MAAO,CACL,KAAM,CACJ,CACE,IACE,CADG,GAJmC,+BAOxC,KACE,CADI,EAFgC,+BAKxC,EACD,AACH,CACF,EAEe,IAP+B,KAOtB,EAAW,UAAE,CAAQ,CAAE,EAC7C,MACE,CAAA,EAAA,EAXM,AAWN,IAAA,EAAC,OAAA,CAAK,KAAK,eACT,CAAA,EAAA,EAAA,CATI,EASJ,EAAC,OAAA,UACC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,eAAe,CAAA,CAAA,KAElB,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UDrBG,ACqBQ,EAAQ,SAAS,UAChC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,SAAS,CAAA,UACP,QAKX","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49]}