{"version":3,"sources":["turbopack:///[project]/node_modules/react-resizable-panels/dist/react-resizable-panels.edge-light.js","turbopack:///[project]/node_modules/@heroui/kbd/dist/chunk-33JVVCIB.mjs","turbopack:///[project]/node_modules/@heroui/theme/dist/chunk-DJLZADVO.mjs","turbopack:///[project]/node_modules/@heroui/kbd/dist/chunk-ZWTE5ZFD.mjs","turbopack:///[project]/node_modules/@heroui/kbd/dist/chunk-EZX35FZF.mjs","turbopack:///[project]/node_modules/@heroui/theme/dist/chunk-6N2H53XF.mjs","turbopack:///[project]/node_modules/@heroui/code/dist/chunk-UDFNFZDA.mjs","turbopack:///[project]/node_modules/@heroui/code/dist/chunk-C3KKIFEX.mjs","turbopack:///[project]/src/app/dev/pdf/page.jsx"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useRef, forwardRef, createElement, useContext, useImperativeHandle, useState, useCallback, useEffect, useMemo } from 'react';\n\n// The \"contextmenu\" event is not supported as a PointerEvent in all browsers yet, so MouseEvent still need to be handled\n\nconst PanelGroupContext = createContext(null);\nPanelGroupContext.displayName = \"PanelGroupContext\";\n\nconst DATA_ATTRIBUTES = {\n  group: \"data-panel-group\",\n  groupDirection: \"data-panel-group-direction\",\n  groupId: \"data-panel-group-id\",\n  panel: \"data-panel\",\n  panelCollapsible: \"data-panel-collapsible\",\n  panelId: \"data-panel-id\",\n  panelSize: \"data-panel-size\",\n  resizeHandle: \"data-resize-handle\",\n  resizeHandleActive: \"data-resize-handle-active\",\n  resizeHandleEnabled: \"data-panel-resize-handle-enabled\",\n  resizeHandleId: \"data-panel-resize-handle-id\",\n  resizeHandleState: \"data-resize-handle-state\"\n};\nconst PRECISION = 10;\n\nconst useId = React[\"useId\".toString()];\nconst wrappedUseId = typeof useId === \"function\" ? useId : () => null;\nlet counter = 0;\nfunction useUniqueId(idFromParams = null) {\n  const idFromUseId = wrappedUseId();\n  const idRef = useRef(idFromParams || idFromUseId || null);\n  if (idRef.current === null) {\n    idRef.current = \"\" + counter++;\n  }\n  return idFromParams !== null && idFromParams !== void 0 ? idFromParams : idRef.current;\n}\n\nfunction PanelWithForwardedRef({\n  children,\n  className: classNameFromProps = \"\",\n  collapsedSize,\n  collapsible,\n  defaultSize,\n  forwardedRef,\n  id: idFromProps,\n  maxSize,\n  minSize,\n  onCollapse,\n  onExpand,\n  onResize,\n  order,\n  style: styleFromProps,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  const context = useContext(PanelGroupContext);\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`);\n  }\n  const {\n    collapsePanel,\n    expandPanel,\n    getPanelSize,\n    getPanelStyle,\n    groupId,\n    isPanelCollapsed,\n    reevaluatePanelConstraints,\n    registerPanel,\n    resizePanel,\n    unregisterPanel\n  } = context;\n  const panelId = useUniqueId(idFromProps);\n  const panelDataRef = useRef({\n    callbacks: {\n      onCollapse,\n      onExpand,\n      onResize\n    },\n    constraints: {\n      collapsedSize,\n      collapsible,\n      defaultSize,\n      maxSize,\n      minSize\n    },\n    id: panelId,\n    idIsFromProps: idFromProps !== undefined,\n    order\n  });\n  useRef({\n    didLogMissingDefaultSizeWarning: false\n  });\n  useImperativeHandle(forwardedRef, () => ({\n    collapse: () => {\n      collapsePanel(panelDataRef.current);\n    },\n    expand: minSize => {\n      expandPanel(panelDataRef.current, minSize);\n    },\n    getId() {\n      return panelId;\n    },\n    getSize() {\n      return getPanelSize(panelDataRef.current);\n    },\n    isCollapsed() {\n      return isPanelCollapsed(panelDataRef.current);\n    },\n    isExpanded() {\n      return !isPanelCollapsed(panelDataRef.current);\n    },\n    resize: size => {\n      resizePanel(panelDataRef.current, size);\n    }\n  }), [collapsePanel, expandPanel, getPanelSize, isPanelCollapsed, panelId, resizePanel]);\n  const style = getPanelStyle(panelDataRef.current, defaultSize);\n  return createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: panelId,\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    // CSS selectors\n    [DATA_ATTRIBUTES.groupId]: groupId,\n    [DATA_ATTRIBUTES.panel]: \"\",\n    [DATA_ATTRIBUTES.panelCollapsible]: collapsible || undefined,\n    [DATA_ATTRIBUTES.panelId]: panelId,\n    [DATA_ATTRIBUTES.panelSize]: parseFloat(\"\" + style.flexGrow).toFixed(1)\n  });\n}\nconst Panel = forwardRef((props, ref) => createElement(PanelWithForwardedRef, {\n  ...props,\n  forwardedRef: ref\n}));\nPanelWithForwardedRef.displayName = \"Panel\";\nPanel.displayName = \"forwardRef(Panel)\";\n\nlet nonce;\nfunction getNonce() {\n  return nonce;\n}\nfunction setNonce(value) {\n  nonce = value;\n}\n\nlet currentCursorStyle = null;\nlet enabled = true;\nlet getCustomCursorStyleFunction = null;\nlet prevRuleIndex = -1;\nlet styleElement = null;\nfunction customizeGlobalCursorStyles(callback) {\n  getCustomCursorStyleFunction = callback;\n}\nfunction disableGlobalCursorStyles() {\n  enabled = false;\n}\nfunction enableGlobalCursorStyles() {\n  enabled = true;\n}\nfunction getCursorStyle(state, constraintFlags, isPointerDown) {\n  const horizontalMin = (constraintFlags & EXCEEDED_HORIZONTAL_MIN) !== 0;\n  const horizontalMax = (constraintFlags & EXCEEDED_HORIZONTAL_MAX) !== 0;\n  const verticalMin = (constraintFlags & EXCEEDED_VERTICAL_MIN) !== 0;\n  const verticalMax = (constraintFlags & EXCEEDED_VERTICAL_MAX) !== 0;\n  if (getCustomCursorStyleFunction) {\n    return getCustomCursorStyleFunction({\n      exceedsHorizontalMaximum: horizontalMax,\n      exceedsHorizontalMinimum: horizontalMin,\n      exceedsVerticalMaximum: verticalMax,\n      exceedsVerticalMinimum: verticalMin,\n      intersectsHorizontalDragHandle: state === \"horizontal\" || state === \"intersection\",\n      intersectsVerticalDragHandle: state === \"vertical\" || state === \"intersection\",\n      isPointerDown\n    });\n  }\n  if (constraintFlags) {\n    if (horizontalMin) {\n      if (verticalMin) {\n        return \"se-resize\";\n      } else if (verticalMax) {\n        return \"ne-resize\";\n      } else {\n        return \"e-resize\";\n      }\n    } else if (horizontalMax) {\n      if (verticalMin) {\n        return \"sw-resize\";\n      } else if (verticalMax) {\n        return \"nw-resize\";\n      } else {\n        return \"w-resize\";\n      }\n    } else if (verticalMin) {\n      return \"s-resize\";\n    } else if (verticalMax) {\n      return \"n-resize\";\n    }\n  }\n  switch (state) {\n    case \"horizontal\":\n      return \"ew-resize\";\n    case \"intersection\":\n      return \"move\";\n    case \"vertical\":\n      return \"ns-resize\";\n  }\n}\nfunction resetGlobalCursorStyle() {\n  if (styleElement !== null) {\n    document.head.removeChild(styleElement);\n    currentCursorStyle = null;\n    styleElement = null;\n    prevRuleIndex = -1;\n  }\n}\nfunction setGlobalCursorStyle(state, constraintFlags, isPointerDown) {\n  var _styleElement$sheet$i, _styleElement$sheet2;\n  if (!enabled) {\n    return;\n  }\n  const style = getCursorStyle(state, constraintFlags, isPointerDown);\n  if (currentCursorStyle === style) {\n    return;\n  }\n  currentCursorStyle = style;\n  if (styleElement === null) {\n    styleElement = document.createElement(\"style\");\n    const nonce = getNonce();\n    if (nonce) {\n      styleElement.setAttribute(\"nonce\", nonce);\n    }\n    document.head.appendChild(styleElement);\n  }\n  if (prevRuleIndex >= 0) {\n    var _styleElement$sheet;\n    (_styleElement$sheet = styleElement.sheet) === null || _styleElement$sheet === void 0 ? void 0 : _styleElement$sheet.removeRule(prevRuleIndex);\n  }\n  prevRuleIndex = (_styleElement$sheet$i = (_styleElement$sheet2 = styleElement.sheet) === null || _styleElement$sheet2 === void 0 ? void 0 : _styleElement$sheet2.insertRule(`*{cursor: ${style} !important;}`)) !== null && _styleElement$sheet$i !== void 0 ? _styleElement$sheet$i : -1;\n}\n\nfunction isKeyDown(event) {\n  return event.type === \"keydown\";\n}\nfunction isPointerEvent(event) {\n  return event.type.startsWith(\"pointer\");\n}\nfunction isMouseEvent(event) {\n  return event.type.startsWith(\"mouse\");\n}\n\nfunction getResizeEventCoordinates(event) {\n  if (isPointerEvent(event)) {\n    if (event.isPrimary) {\n      return {\n        x: event.clientX,\n        y: event.clientY\n      };\n    }\n  } else if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n  return {\n    x: Infinity,\n    y: Infinity\n  };\n}\n\nfunction getInputType() {\n  if (typeof matchMedia === \"function\") {\n    return matchMedia(\"(pointer:coarse)\").matches ? \"coarse\" : \"fine\";\n  }\n}\n\nfunction intersects(rectOne, rectTwo, strict) {\n  if (strict) {\n    return rectOne.x < rectTwo.x + rectTwo.width && rectOne.x + rectOne.width > rectTwo.x && rectOne.y < rectTwo.y + rectTwo.height && rectOne.y + rectOne.height > rectTwo.y;\n  } else {\n    return rectOne.x <= rectTwo.x + rectTwo.width && rectOne.x + rectOne.width >= rectTwo.x && rectOne.y <= rectTwo.y + rectTwo.height && rectOne.y + rectOne.height >= rectTwo.y;\n  }\n}\n\n// Forked from NPM stacking-order@2.0.0\n\n/**\n * Determine which of two nodes appears in front of the other —\n * if `a` is in front, returns 1, otherwise returns -1\n * @param {HTMLElement | SVGElement} a\n * @param {HTMLElement | SVGElement} b\n */\nfunction compare(a, b) {\n  if (a === b) throw new Error(\"Cannot compare node with itself\");\n  const ancestors = {\n    a: get_ancestors(a),\n    b: get_ancestors(b)\n  };\n  let common_ancestor;\n\n  // remove shared ancestors\n  while (ancestors.a.at(-1) === ancestors.b.at(-1)) {\n    a = ancestors.a.pop();\n    b = ancestors.b.pop();\n    common_ancestor = a;\n  }\n  assert(common_ancestor, \"Stacking order can only be calculated for elements with a common ancestor\");\n  const z_indexes = {\n    a: get_z_index(find_stacking_context(ancestors.a)),\n    b: get_z_index(find_stacking_context(ancestors.b))\n  };\n  if (z_indexes.a === z_indexes.b) {\n    const children = common_ancestor.childNodes;\n    const furthest_ancestors = {\n      a: ancestors.a.at(-1),\n      b: ancestors.b.at(-1)\n    };\n    let i = children.length;\n    while (i--) {\n      const child = children[i];\n      if (child === furthest_ancestors.a) return 1;\n      if (child === furthest_ancestors.b) return -1;\n    }\n  }\n  return Math.sign(z_indexes.a - z_indexes.b);\n}\nconst props = /\\b(?:position|zIndex|opacity|transform|webkitTransform|mixBlendMode|filter|webkitFilter|isolation)\\b/;\n\n/** @param {HTMLElement | SVGElement} node */\nfunction is_flex_item(node) {\n  var _get_parent;\n  // @ts-ignore\n  const display = getComputedStyle((_get_parent = get_parent(node)) !== null && _get_parent !== void 0 ? _get_parent : node).display;\n  return display === \"flex\" || display === \"inline-flex\";\n}\n\n/** @param {HTMLElement | SVGElement} node */\nfunction creates_stacking_context(node) {\n  const style = getComputedStyle(node);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n  if (style.position === \"fixed\") return true;\n  // Forked to fix upstream bug https://github.com/Rich-Harris/stacking-order/issues/3\n  // if (\n  //   (style.zIndex !== \"auto\" && style.position !== \"static\") ||\n  //   is_flex_item(node)\n  // )\n  if (style.zIndex !== \"auto\" && (style.position !== \"static\" || is_flex_item(node))) return true;\n  if (+style.opacity < 1) return true;\n  if (\"transform\" in style && style.transform !== \"none\") return true;\n  if (\"webkitTransform\" in style && style.webkitTransform !== \"none\") return true;\n  if (\"mixBlendMode\" in style && style.mixBlendMode !== \"normal\") return true;\n  if (\"filter\" in style && style.filter !== \"none\") return true;\n  if (\"webkitFilter\" in style && style.webkitFilter !== \"none\") return true;\n  if (\"isolation\" in style && style.isolation === \"isolate\") return true;\n  if (props.test(style.willChange)) return true;\n  // @ts-expect-error\n  if (style.webkitOverflowScrolling === \"touch\") return true;\n  return false;\n}\n\n/** @param {(HTMLElement| SVGElement)[]} nodes */\nfunction find_stacking_context(nodes) {\n  let i = nodes.length;\n  while (i--) {\n    const node = nodes[i];\n    assert(node, \"Missing node\");\n    if (creates_stacking_context(node)) return node;\n  }\n  return null;\n}\n\n/** @param {HTMLElement | SVGElement} node */\nfunction get_z_index(node) {\n  return node && Number(getComputedStyle(node).zIndex) || 0;\n}\n\n/** @param {HTMLElement} node */\nfunction get_ancestors(node) {\n  const ancestors = [];\n  while (node) {\n    ancestors.push(node);\n    // @ts-ignore\n    node = get_parent(node);\n  }\n  return ancestors; // [ node, ... <body>, <html>, document ]\n}\n\n/** @param {HTMLElement} node */\nfunction get_parent(node) {\n  const {\n    parentNode\n  } = node;\n  if (parentNode && parentNode instanceof ShadowRoot) {\n    return parentNode.host;\n  }\n  return parentNode;\n}\n\nconst EXCEEDED_HORIZONTAL_MIN = 0b0001;\nconst EXCEEDED_HORIZONTAL_MAX = 0b0010;\nconst EXCEEDED_VERTICAL_MIN = 0b0100;\nconst EXCEEDED_VERTICAL_MAX = 0b1000;\nconst isCoarsePointer = getInputType() === \"coarse\";\nlet intersectingHandles = [];\nlet isPointerDown = false;\nlet ownerDocumentCounts = new Map();\nlet panelConstraintFlags = new Map();\nconst registeredResizeHandlers = new Set();\nfunction registerResizeHandle(resizeHandleId, element, direction, hitAreaMargins, setResizeHandlerState) {\n  var _ownerDocumentCounts$;\n  const {\n    ownerDocument\n  } = element;\n  const data = {\n    direction,\n    element,\n    hitAreaMargins,\n    setResizeHandlerState\n  };\n  const count = (_ownerDocumentCounts$ = ownerDocumentCounts.get(ownerDocument)) !== null && _ownerDocumentCounts$ !== void 0 ? _ownerDocumentCounts$ : 0;\n  ownerDocumentCounts.set(ownerDocument, count + 1);\n  registeredResizeHandlers.add(data);\n  updateListeners();\n  return function unregisterResizeHandle() {\n    var _ownerDocumentCounts$2;\n    panelConstraintFlags.delete(resizeHandleId);\n    registeredResizeHandlers.delete(data);\n    const count = (_ownerDocumentCounts$2 = ownerDocumentCounts.get(ownerDocument)) !== null && _ownerDocumentCounts$2 !== void 0 ? _ownerDocumentCounts$2 : 1;\n    ownerDocumentCounts.set(ownerDocument, count - 1);\n    updateListeners();\n    if (count === 1) {\n      ownerDocumentCounts.delete(ownerDocument);\n    }\n\n    // If the resize handle that is currently unmounting is intersecting with the pointer,\n    // update the global pointer to account for the change\n    if (intersectingHandles.includes(data)) {\n      const index = intersectingHandles.indexOf(data);\n      if (index >= 0) {\n        intersectingHandles.splice(index, 1);\n      }\n      updateCursor();\n\n      // Also instruct the handle to stop dragging; this prevents the parent group from being left in an inconsistent state\n      // See github.com/bvaughn/react-resizable-panels/issues/402\n      setResizeHandlerState(\"up\", true, null);\n    }\n  };\n}\nfunction handlePointerDown(event) {\n  const {\n    target\n  } = event;\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  isPointerDown = true;\n  recalculateIntersectingHandles({\n    target,\n    x,\n    y\n  });\n  updateListeners();\n  if (intersectingHandles.length > 0) {\n    updateResizeHandlerStates(\"down\", event);\n\n    // Update cursor based on return value(s) from active handles\n    updateCursor();\n    event.preventDefault();\n    if (!isWithinResizeHandle(target)) {\n      event.stopImmediatePropagation();\n    }\n  }\n}\nfunction handlePointerMove(event) {\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n\n  // Edge case (see #340)\n  // Detect when the pointer has been released outside an iframe on a different domain\n  if (isPointerDown &&\n  // Skip this check for \"pointerleave\" events, else Firefox triggers a false positive (see #514)\n  event.type !== \"pointerleave\" && event.buttons === 0) {\n    isPointerDown = false;\n    updateResizeHandlerStates(\"up\", event);\n  }\n  if (!isPointerDown) {\n    const {\n      target\n    } = event;\n\n    // Recalculate intersecting handles whenever the pointer moves, except if it has already been pressed\n    // at that point, the handles may not move with the pointer (depending on constraints)\n    // but the same set of active handles should be locked until the pointer is released\n    recalculateIntersectingHandles({\n      target,\n      x,\n      y\n    });\n  }\n  updateResizeHandlerStates(\"move\", event);\n\n  // Update cursor based on return value(s) from active handles\n  updateCursor();\n  if (intersectingHandles.length > 0) {\n    event.preventDefault();\n  }\n}\nfunction handlePointerUp(event) {\n  const {\n    target\n  } = event;\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  panelConstraintFlags.clear();\n  isPointerDown = false;\n  if (intersectingHandles.length > 0) {\n    event.preventDefault();\n    if (!isWithinResizeHandle(target)) {\n      event.stopImmediatePropagation();\n    }\n  }\n  updateResizeHandlerStates(\"up\", event);\n  recalculateIntersectingHandles({\n    target,\n    x,\n    y\n  });\n  updateCursor();\n  updateListeners();\n}\nfunction isWithinResizeHandle(element) {\n  let currentElement = element;\n  while (currentElement) {\n    if (currentElement.hasAttribute(DATA_ATTRIBUTES.resizeHandle)) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\nfunction recalculateIntersectingHandles({\n  target,\n  x,\n  y\n}) {\n  intersectingHandles.splice(0);\n  let targetElement = null;\n  if (target instanceof HTMLElement || target instanceof SVGElement) {\n    targetElement = target;\n  }\n  registeredResizeHandlers.forEach(data => {\n    const {\n      element: dragHandleElement,\n      hitAreaMargins\n    } = data;\n    const dragHandleRect = dragHandleElement.getBoundingClientRect();\n    const {\n      bottom,\n      left,\n      right,\n      top\n    } = dragHandleRect;\n    const margin = isCoarsePointer ? hitAreaMargins.coarse : hitAreaMargins.fine;\n    const eventIntersects = x >= left - margin && x <= right + margin && y >= top - margin && y <= bottom + margin;\n    if (eventIntersects) {\n      // TRICKY\n      // We listen for pointers events at the root in order to support hit area margins\n      // (determining when the pointer is close enough to an element to be considered a \"hit\")\n      // Clicking on an element \"above\" a handle (e.g. a modal) should prevent a hit though\n      // so at this point we need to compare stacking order of a potentially intersecting drag handle,\n      // and the element that was actually clicked/touched\n      if (targetElement !== null && document.contains(targetElement) && dragHandleElement !== targetElement && !dragHandleElement.contains(targetElement) && !targetElement.contains(dragHandleElement) &&\n      // Calculating stacking order has a cost, so we should avoid it if possible\n      // That is why we only check potentially intersecting handles,\n      // and why we skip if the event target is within the handle's DOM\n      compare(targetElement, dragHandleElement) > 0) {\n        // If the target is above the drag handle, then we also need to confirm they overlap\n        // If they are beside each other (e.g. a panel and its drag handle) then the handle is still interactive\n        //\n        // It's not enough to compare only the target\n        // The target might be a small element inside of a larger container\n        // (For example, a SPAN or a DIV inside of a larger modal dialog)\n        let currentElement = targetElement;\n        let didIntersect = false;\n        while (currentElement) {\n          if (currentElement.contains(dragHandleElement)) {\n            break;\n          } else if (intersects(currentElement.getBoundingClientRect(), dragHandleRect, true)) {\n            didIntersect = true;\n            break;\n          }\n          currentElement = currentElement.parentElement;\n        }\n        if (didIntersect) {\n          return;\n        }\n      }\n      intersectingHandles.push(data);\n    }\n  });\n}\nfunction reportConstraintsViolation(resizeHandleId, flag) {\n  panelConstraintFlags.set(resizeHandleId, flag);\n}\nfunction updateCursor() {\n  let intersectsHorizontal = false;\n  let intersectsVertical = false;\n  intersectingHandles.forEach(data => {\n    const {\n      direction\n    } = data;\n    if (direction === \"horizontal\") {\n      intersectsHorizontal = true;\n    } else {\n      intersectsVertical = true;\n    }\n  });\n  let constraintFlags = 0;\n  panelConstraintFlags.forEach(flag => {\n    constraintFlags |= flag;\n  });\n  if (intersectsHorizontal && intersectsVertical) {\n    setGlobalCursorStyle(\"intersection\", constraintFlags, isPointerDown);\n  } else if (intersectsHorizontal) {\n    setGlobalCursorStyle(\"horizontal\", constraintFlags, isPointerDown);\n  } else if (intersectsVertical) {\n    setGlobalCursorStyle(\"vertical\", constraintFlags, isPointerDown);\n  } else {\n    resetGlobalCursorStyle();\n  }\n}\nlet listenersAbortController;\nfunction updateListeners() {\n  var _listenersAbortContro;\n  (_listenersAbortContro = listenersAbortController) === null || _listenersAbortContro === void 0 ? void 0 : _listenersAbortContro.abort();\n  listenersAbortController = new AbortController();\n  const options = {\n    capture: true,\n    signal: listenersAbortController.signal\n  };\n  if (!registeredResizeHandlers.size) {\n    return;\n  }\n  if (isPointerDown) {\n    if (intersectingHandles.length > 0) {\n      ownerDocumentCounts.forEach((count, ownerDocument) => {\n        const {\n          body\n        } = ownerDocument;\n        if (count > 0) {\n          body.addEventListener(\"contextmenu\", handlePointerUp, options);\n          body.addEventListener(\"pointerleave\", handlePointerMove, options);\n          body.addEventListener(\"pointermove\", handlePointerMove, options);\n        }\n      });\n    }\n    ownerDocumentCounts.forEach((_, ownerDocument) => {\n      const {\n        body\n      } = ownerDocument;\n      body.addEventListener(\"pointerup\", handlePointerUp, options);\n      body.addEventListener(\"pointercancel\", handlePointerUp, options);\n    });\n  } else {\n    ownerDocumentCounts.forEach((count, ownerDocument) => {\n      const {\n        body\n      } = ownerDocument;\n      if (count > 0) {\n        body.addEventListener(\"pointerdown\", handlePointerDown, options);\n        body.addEventListener(\"pointermove\", handlePointerMove, options);\n      }\n    });\n  }\n}\nfunction updateResizeHandlerStates(action, event) {\n  registeredResizeHandlers.forEach(data => {\n    const {\n      setResizeHandlerState\n    } = data;\n    const isActive = intersectingHandles.includes(data);\n    setResizeHandlerState(action, isActive, event);\n  });\n}\n\nfunction useForceUpdate() {\n  const [_, setCount] = useState(0);\n  return useCallback(() => setCount(prevCount => prevCount + 1), []);\n}\n\nfunction assert(expectedCondition, message) {\n  if (!expectedCondition) {\n    console.error(message);\n    throw Error(message);\n  }\n}\n\nfunction fuzzyCompareNumbers(actual, expected, fractionDigits = PRECISION) {\n  if (actual.toFixed(fractionDigits) === expected.toFixed(fractionDigits)) {\n    return 0;\n  } else {\n    return actual > expected ? 1 : -1;\n  }\n}\nfunction fuzzyNumbersEqual$1(actual, expected, fractionDigits = PRECISION) {\n  return fuzzyCompareNumbers(actual, expected, fractionDigits) === 0;\n}\n\nfunction fuzzyNumbersEqual(actual, expected, fractionDigits) {\n  return fuzzyCompareNumbers(actual, expected, fractionDigits) === 0;\n}\n\nfunction fuzzyLayoutsEqual(actual, expected, fractionDigits) {\n  if (actual.length !== expected.length) {\n    return false;\n  }\n  for (let index = 0; index < actual.length; index++) {\n    const actualSize = actual[index];\n    const expectedSize = expected[index];\n    if (!fuzzyNumbersEqual(actualSize, expectedSize, fractionDigits)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Panel size must be in percentages; pixel values should be pre-converted\nfunction resizePanel({\n  panelConstraints: panelConstraintsArray,\n  panelIndex,\n  size\n}) {\n  const panelConstraints = panelConstraintsArray[panelIndex];\n  assert(panelConstraints != null, `Panel constraints not found for index ${panelIndex}`);\n  let {\n    collapsedSize = 0,\n    collapsible,\n    maxSize = 100,\n    minSize = 0\n  } = panelConstraints;\n  if (fuzzyCompareNumbers(size, minSize) < 0) {\n    if (collapsible) {\n      // Collapsible panels should snap closed or open only once they cross the halfway point between collapsed and min size.\n      const halfwayPoint = (collapsedSize + minSize) / 2;\n      if (fuzzyCompareNumbers(size, halfwayPoint) < 0) {\n        size = collapsedSize;\n      } else {\n        size = minSize;\n      }\n    } else {\n      size = minSize;\n    }\n  }\n  size = Math.min(maxSize, size);\n  size = parseFloat(size.toFixed(PRECISION));\n  return size;\n}\n\n// All units must be in percentages; pixel values should be pre-converted\nfunction adjustLayoutByDelta({\n  delta,\n  initialLayout,\n  panelConstraints: panelConstraintsArray,\n  pivotIndices,\n  prevLayout,\n  trigger\n}) {\n  if (fuzzyNumbersEqual(delta, 0)) {\n    return initialLayout;\n  }\n  const nextLayout = [...initialLayout];\n  const [firstPivotIndex, secondPivotIndex] = pivotIndices;\n  assert(firstPivotIndex != null, \"Invalid first pivot index\");\n  assert(secondPivotIndex != null, \"Invalid second pivot index\");\n  let deltaApplied = 0;\n\n  // const DEBUG = [];\n  // DEBUG.push(`adjustLayoutByDelta()`);\n  // DEBUG.push(`  initialLayout: ${initialLayout.join(\", \")}`);\n  // DEBUG.push(`  prevLayout: ${prevLayout.join(\", \")}`);\n  // DEBUG.push(`  delta: ${delta}`);\n  // DEBUG.push(`  pivotIndices: ${pivotIndices.join(\", \")}`);\n  // DEBUG.push(`  trigger: ${trigger}`);\n  // DEBUG.push(\"\");\n\n  // A resizing panel affects the panels before or after it.\n  //\n  // A negative delta means the panel(s) immediately after the resize handle should grow/expand by decreasing its offset.\n  // Other panels may also need to shrink/contract (and shift) to make room, depending on the min weights.\n  //\n  // A positive delta means the panel(s) immediately before the resize handle should \"expand\".\n  // This is accomplished by shrinking/contracting (and shifting) one or more of the panels after the resize handle.\n\n  {\n    // If this is a resize triggered by a keyboard event, our logic for expanding/collapsing is different.\n    // We no longer check the halfway threshold because this may prevent the panel from expanding at all.\n    if (trigger === \"keyboard\") {\n      {\n        // Check if we should expand a collapsed panel\n        const index = delta < 0 ? secondPivotIndex : firstPivotIndex;\n        const panelConstraints = panelConstraintsArray[index];\n        assert(panelConstraints, `Panel constraints not found for index ${index}`);\n        const {\n          collapsedSize = 0,\n          collapsible,\n          minSize = 0\n        } = panelConstraints;\n\n        // DEBUG.push(`edge case check 1: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${collapsible}`);\n        if (collapsible) {\n          const prevSize = initialLayout[index];\n          assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n          if (fuzzyNumbersEqual(prevSize, collapsedSize)) {\n            const localDelta = minSize - prevSize;\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0) {\n              delta = delta < 0 ? 0 - localDelta : localDelta;\n              // DEBUG.push(`  -> delta: ${delta}`);\n            }\n          }\n        }\n      }\n\n      {\n        // Check if we should collapse a panel at its minimum size\n        const index = delta < 0 ? firstPivotIndex : secondPivotIndex;\n        const panelConstraints = panelConstraintsArray[index];\n        assert(panelConstraints, `No panel constraints found for index ${index}`);\n        const {\n          collapsedSize = 0,\n          collapsible,\n          minSize = 0\n        } = panelConstraints;\n\n        // DEBUG.push(`edge case check 2: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${collapsible}`);\n        if (collapsible) {\n          const prevSize = initialLayout[index];\n          assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n          if (fuzzyNumbersEqual(prevSize, minSize)) {\n            const localDelta = prevSize - collapsedSize;\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0) {\n              delta = delta < 0 ? 0 - localDelta : localDelta;\n              // DEBUG.push(`  -> delta: ${delta}`);\n            }\n          }\n        }\n      }\n    }\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Pre-calculate max available delta in the opposite direction of our pivot.\n    // This will be the maximum amount we're allowed to expand/contract the panels in the primary direction.\n    // If this amount is less than the requested delta, adjust the requested delta.\n    // If this amount is greater than the requested delta, that's useful information too–\n    // as an expanding panel might change from collapsed to min size.\n\n    const increment = delta < 0 ? 1 : -1;\n    let index = delta < 0 ? secondPivotIndex : firstPivotIndex;\n    let maxAvailableDelta = 0;\n\n    // DEBUG.push(\"pre calc...\");\n    while (true) {\n      const prevSize = initialLayout[index];\n      assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n      const maxSafeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: 100\n      });\n      const delta = maxSafeSize - prevSize;\n      // DEBUG.push(`  ${index}: ${prevSize} -> ${maxSafeSize}`);\n\n      maxAvailableDelta += delta;\n      index += increment;\n      if (index < 0 || index >= panelConstraintsArray.length) {\n        break;\n      }\n    }\n\n    // DEBUG.push(`  -> max available delta: ${maxAvailableDelta}`);\n    const minAbsDelta = Math.min(Math.abs(delta), Math.abs(maxAvailableDelta));\n    delta = delta < 0 ? 0 - minAbsDelta : minAbsDelta;\n    // DEBUG.push(`  -> adjusted delta: ${delta}`);\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Delta added to a panel needs to be subtracted from other panels (within the constraints that those panels allow).\n\n    const pivotIndex = delta < 0 ? firstPivotIndex : secondPivotIndex;\n    let index = pivotIndex;\n    while (index >= 0 && index < panelConstraintsArray.length) {\n      const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied);\n      const prevSize = initialLayout[index];\n      assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n      const unsafeSize = prevSize - deltaRemaining;\n      const safeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: unsafeSize\n      });\n      if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n        deltaApplied += prevSize - safeSize;\n        nextLayout[index] = safeSize;\n        if (deltaApplied.toFixed(3).localeCompare(Math.abs(delta).toFixed(3), undefined, {\n          numeric: true\n        }) >= 0) {\n          break;\n        }\n      }\n      if (delta < 0) {\n        index--;\n      } else {\n        index++;\n      }\n    }\n  }\n  // DEBUG.push(`after 1: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  // If we were unable to resize any of the panels panels, return the previous state.\n  // This will essentially bailout and ignore e.g. drags past a panel's boundaries\n  if (fuzzyLayoutsEqual(prevLayout, nextLayout)) {\n    // DEBUG.push(`bailout to previous layout: ${prevLayout.join(\", \")}`);\n    // console.log(DEBUG.join(\"\\n\"));\n\n    return prevLayout;\n  }\n  {\n    // Now distribute the applied delta to the panels in the other direction\n    const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex;\n    const prevSize = initialLayout[pivotIndex];\n    assert(prevSize != null, `Previous layout not found for panel index ${pivotIndex}`);\n    const unsafeSize = prevSize + deltaApplied;\n    const safeSize = resizePanel({\n      panelConstraints: panelConstraintsArray,\n      panelIndex: pivotIndex,\n      size: unsafeSize\n    });\n\n    // Adjust the pivot panel before, but only by the amount that surrounding panels were able to shrink/contract.\n    nextLayout[pivotIndex] = safeSize;\n\n    // Edge case where expanding or contracting one panel caused another one to change collapsed state\n    if (!fuzzyNumbersEqual(safeSize, unsafeSize)) {\n      let deltaRemaining = unsafeSize - safeSize;\n      const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex;\n      let index = pivotIndex;\n      while (index >= 0 && index < panelConstraintsArray.length) {\n        const prevSize = nextLayout[index];\n        assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n        const unsafeSize = prevSize + deltaRemaining;\n        const safeSize = resizePanel({\n          panelConstraints: panelConstraintsArray,\n          panelIndex: index,\n          size: unsafeSize\n        });\n        if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n          deltaRemaining -= safeSize - prevSize;\n          nextLayout[index] = safeSize;\n        }\n        if (fuzzyNumbersEqual(deltaRemaining, 0)) {\n          break;\n        }\n        if (delta > 0) {\n          index--;\n        } else {\n          index++;\n        }\n      }\n    }\n  }\n  // DEBUG.push(`after 2: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  const totalSize = nextLayout.reduce((total, size) => size + total, 0);\n  // DEBUG.push(`total size: ${totalSize}`);\n\n  // If our new layout doesn't add up to 100%, that means the requested delta can't be applied\n  // In that case, fall back to our most recent valid layout\n  if (!fuzzyNumbersEqual(totalSize, 100)) {\n    // DEBUG.push(`bailout to previous layout: ${prevLayout.join(\", \")}`);\n    // console.log(DEBUG.join(\"\\n\"));\n\n    return prevLayout;\n  }\n\n  // console.log(DEBUG.join(\"\\n\"));\n  return nextLayout;\n}\n\nfunction getResizeHandleElementsForGroup(groupId, scope = document) {\n  return Array.from(scope.querySelectorAll(`[${DATA_ATTRIBUTES.resizeHandleId}][data-panel-group-id=\"${groupId}\"]`));\n}\n\nfunction getResizeHandleElementIndex(groupId, id, scope = document) {\n  const handles = getResizeHandleElementsForGroup(groupId, scope);\n  const index = handles.findIndex(handle => handle.getAttribute(DATA_ATTRIBUTES.resizeHandleId) === id);\n  return index !== null && index !== void 0 ? index : null;\n}\n\nfunction determinePivotIndices(groupId, dragHandleId, panelGroupElement) {\n  const index = getResizeHandleElementIndex(groupId, dragHandleId, panelGroupElement);\n  return index != null ? [index, index + 1] : [-1, -1];\n}\n\nfunction isHTMLElement(target) {\n  if (target instanceof HTMLElement) {\n    return true;\n  }\n\n  // Fallback to duck typing to handle edge case of portals within a popup window\n  return typeof target === \"object\" && target !== null && \"tagName\" in target && \"getAttribute\" in target;\n}\n\nfunction getPanelGroupElement(id, rootElement = document) {\n  // If the root element is the PanelGroup\n  if (isHTMLElement(rootElement) && rootElement.dataset.panelGroupId == id) {\n    return rootElement;\n  }\n\n  // Else query children\n  const element = rootElement.querySelector(`[data-panel-group][data-panel-group-id=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getResizeHandleElement(id, scope = document) {\n  const element = scope.querySelector(`[${DATA_ATTRIBUTES.resizeHandleId}=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getResizeHandlePanelIds(groupId, handleId, panelsArray, scope = document) {\n  var _panelsArray$index$id, _panelsArray$index, _panelsArray$id, _panelsArray;\n  const handle = getResizeHandleElement(handleId, scope);\n  const handles = getResizeHandleElementsForGroup(groupId, scope);\n  const index = handle ? handles.indexOf(handle) : -1;\n  const idBefore = (_panelsArray$index$id = (_panelsArray$index = panelsArray[index]) === null || _panelsArray$index === void 0 ? void 0 : _panelsArray$index.id) !== null && _panelsArray$index$id !== void 0 ? _panelsArray$index$id : null;\n  const idAfter = (_panelsArray$id = (_panelsArray = panelsArray[index + 1]) === null || _panelsArray === void 0 ? void 0 : _panelsArray.id) !== null && _panelsArray$id !== void 0 ? _panelsArray$id : null;\n  return [idBefore, idAfter];\n}\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nfunction useWindowSplitterPanelGroupBehavior({\n  committedValuesRef,\n  eagerValuesRef,\n  groupId,\n  layout,\n  panelDataArray,\n  panelGroupElement,\n  setLayout\n}) {\n  useRef({\n    didWarnAboutMissingResizeHandle: false\n  });\n  useEffect(() => {\n    if (!panelGroupElement) {\n      return;\n    }\n    const eagerValues = eagerValuesRef.current;\n    assert(eagerValues, `Eager values not found`);\n    const {\n      panelDataArray\n    } = eagerValues;\n    const groupElement = getPanelGroupElement(groupId, panelGroupElement);\n    assert(groupElement != null, `No group found for id \"${groupId}\"`);\n    const handles = getResizeHandleElementsForGroup(groupId, panelGroupElement);\n    assert(handles, `No resize handles found for group id \"${groupId}\"`);\n    const cleanupFunctions = handles.map(handle => {\n      const handleId = handle.getAttribute(DATA_ATTRIBUTES.resizeHandleId);\n      assert(handleId, `Resize handle element has no handle id attribute`);\n      const [idBefore, idAfter] = getResizeHandlePanelIds(groupId, handleId, panelDataArray, panelGroupElement);\n      if (idBefore == null || idAfter == null) {\n        return () => {};\n      }\n      const onKeyDown = event => {\n        if (event.defaultPrevented) {\n          return;\n        }\n        switch (event.key) {\n          case \"Enter\":\n            {\n              event.preventDefault();\n              const index = panelDataArray.findIndex(panelData => panelData.id === idBefore);\n              if (index >= 0) {\n                const panelData = panelDataArray[index];\n                assert(panelData, `No panel data found for index ${index}`);\n                const size = layout[index];\n                const {\n                  collapsedSize = 0,\n                  collapsible,\n                  minSize = 0\n                } = panelData.constraints;\n                if (size != null && collapsible) {\n                  const nextLayout = adjustLayoutByDelta({\n                    delta: fuzzyNumbersEqual(size, collapsedSize) ? minSize - collapsedSize : collapsedSize - size,\n                    initialLayout: layout,\n                    panelConstraints: panelDataArray.map(panelData => panelData.constraints),\n                    pivotIndices: determinePivotIndices(groupId, handleId, panelGroupElement),\n                    prevLayout: layout,\n                    trigger: \"keyboard\"\n                  });\n                  if (layout !== nextLayout) {\n                    setLayout(nextLayout);\n                  }\n                }\n              }\n              break;\n            }\n        }\n      };\n      handle.addEventListener(\"keydown\", onKeyDown);\n      return () => {\n        handle.removeEventListener(\"keydown\", onKeyDown);\n      };\n    });\n    return () => {\n      cleanupFunctions.forEach(cleanupFunction => cleanupFunction());\n    };\n  }, [panelGroupElement, committedValuesRef, eagerValuesRef, groupId, layout, panelDataArray, setLayout]);\n}\n\nfunction areEqual(arrayA, arrayB) {\n  if (arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let index = 0; index < arrayA.length; index++) {\n    if (arrayA[index] !== arrayB[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getResizeEventCursorPosition(direction, event) {\n  const isHorizontal = direction === \"horizontal\";\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  return isHorizontal ? x : y;\n}\n\nfunction calculateDragOffsetPercentage(event, dragHandleId, direction, initialDragState, panelGroupElement) {\n  const isHorizontal = direction === \"horizontal\";\n  const handleElement = getResizeHandleElement(dragHandleId, panelGroupElement);\n  assert(handleElement, `No resize handle element found for id \"${dragHandleId}\"`);\n  const groupId = handleElement.getAttribute(DATA_ATTRIBUTES.groupId);\n  assert(groupId, `Resize handle element has no group id attribute`);\n  let {\n    initialCursorPosition\n  } = initialDragState;\n  const cursorPosition = getResizeEventCursorPosition(direction, event);\n  const groupElement = getPanelGroupElement(groupId, panelGroupElement);\n  assert(groupElement, `No group element found for id \"${groupId}\"`);\n  const groupRect = groupElement.getBoundingClientRect();\n  const groupSizeInPixels = isHorizontal ? groupRect.width : groupRect.height;\n  const offsetPixels = cursorPosition - initialCursorPosition;\n  const offsetPercentage = offsetPixels / groupSizeInPixels * 100;\n  return offsetPercentage;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX\nfunction calculateDeltaPercentage(event, dragHandleId, direction, initialDragState, keyboardResizeBy, panelGroupElement) {\n  if (isKeyDown(event)) {\n    const isHorizontal = direction === \"horizontal\";\n    let delta = 0;\n    if (event.shiftKey) {\n      delta = 100;\n    } else if (keyboardResizeBy != null) {\n      delta = keyboardResizeBy;\n    } else {\n      delta = 10;\n    }\n    let movement = 0;\n    switch (event.key) {\n      case \"ArrowDown\":\n        movement = isHorizontal ? 0 : delta;\n        break;\n      case \"ArrowLeft\":\n        movement = isHorizontal ? -delta : 0;\n        break;\n      case \"ArrowRight\":\n        movement = isHorizontal ? delta : 0;\n        break;\n      case \"ArrowUp\":\n        movement = isHorizontal ? 0 : -delta;\n        break;\n      case \"End\":\n        movement = 100;\n        break;\n      case \"Home\":\n        movement = -100;\n        break;\n    }\n    return movement;\n  } else {\n    if (initialDragState == null) {\n      return 0;\n    }\n    return calculateDragOffsetPercentage(event, dragHandleId, direction, initialDragState, panelGroupElement);\n  }\n}\n\n// Layout should be pre-converted into percentages\nfunction callPanelCallbacks(panelsArray, layout, panelIdToLastNotifiedSizeMap) {\n  layout.forEach((size, index) => {\n    const panelData = panelsArray[index];\n    assert(panelData, `Panel data not found for index ${index}`);\n    const {\n      callbacks,\n      constraints,\n      id: panelId\n    } = panelData;\n    const {\n      collapsedSize = 0,\n      collapsible\n    } = constraints;\n    const lastNotifiedSize = panelIdToLastNotifiedSizeMap[panelId];\n    if (lastNotifiedSize == null || size !== lastNotifiedSize) {\n      panelIdToLastNotifiedSizeMap[panelId] = size;\n      const {\n        onCollapse,\n        onExpand,\n        onResize\n      } = callbacks;\n      if (onResize) {\n        onResize(size, lastNotifiedSize);\n      }\n      if (collapsible && (onCollapse || onExpand)) {\n        if (onExpand && (lastNotifiedSize == null || fuzzyNumbersEqual$1(lastNotifiedSize, collapsedSize)) && !fuzzyNumbersEqual$1(size, collapsedSize)) {\n          onExpand();\n        }\n        if (onCollapse && (lastNotifiedSize == null || !fuzzyNumbersEqual$1(lastNotifiedSize, collapsedSize)) && fuzzyNumbersEqual$1(size, collapsedSize)) {\n          onCollapse();\n        }\n      }\n    }\n  });\n}\n\nfunction compareLayouts(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  } else {\n    for (let index = 0; index < a.length; index++) {\n      if (a[index] != b[index]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n// This method returns a number between 1 and 100 representing\n\n// the % of the group's overall space this panel should occupy.\nfunction computePanelFlexBoxStyle({\n  defaultSize,\n  dragState,\n  layout,\n  panelData,\n  panelIndex,\n  precision = 3\n}) {\n  const size = layout[panelIndex];\n  let flexGrow;\n  if (size == null) {\n    // Initial render (before panels have registered themselves)\n    // In order to support server rendering, fall back to default size if provided\n    flexGrow = defaultSize != undefined ? defaultSize.toFixed(precision) : \"1\";\n  } else if (panelData.length === 1) {\n    // Special case: Single panel group should always fill full width/height\n    flexGrow = \"1\";\n  } else {\n    flexGrow = size.toFixed(precision);\n  }\n  return {\n    flexBasis: 0,\n    flexGrow,\n    flexShrink: 1,\n    // Without this, Panel sizes may be unintentionally overridden by their content\n    overflow: \"hidden\",\n    // Disable pointer events inside of a panel during resize\n    // This avoid edge cases like nested iframes\n    pointerEvents: dragState !== null ? \"none\" : undefined\n  };\n}\n\nfunction debounce(callback, durationMs = 10) {\n  let timeoutId = null;\n  let callable = (...args) => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      callback(...args);\n    }, durationMs);\n  };\n  return callable;\n}\n\n// PanelGroup might be rendering in a server-side environment where localStorage is not available\n// or on a browser with cookies/storage disabled.\n// In either case, this function avoids accessing localStorage until needed,\n// and avoids throwing user-visible errors.\nfunction initializeDefaultStorage(storageObject) {\n  try {\n    if (typeof localStorage !== \"undefined\") {\n      // Bypass this check for future calls\n      storageObject.getItem = name => {\n        return localStorage.getItem(name);\n      };\n      storageObject.setItem = (name, value) => {\n        localStorage.setItem(name, value);\n      };\n    } else {\n      throw new Error(\"localStorage not supported in this environment\");\n    }\n  } catch (error) {\n    console.error(error);\n    storageObject.getItem = () => null;\n    storageObject.setItem = () => {};\n  }\n}\n\nfunction getPanelGroupKey(autoSaveId) {\n  return `react-resizable-panels:${autoSaveId}`;\n}\n\n// Note that Panel ids might be user-provided (stable) or useId generated (non-deterministic)\n// so they should not be used as part of the serialization key.\n// Using the min/max size attributes should work well enough as a backup.\n// Pre-sorting by minSize allows remembering layouts even if panels are re-ordered/dragged.\nfunction getPanelKey(panels) {\n  return panels.map(panel => {\n    const {\n      constraints,\n      id,\n      idIsFromProps,\n      order\n    } = panel;\n    if (idIsFromProps) {\n      return id;\n    } else {\n      return order ? `${order}:${JSON.stringify(constraints)}` : JSON.stringify(constraints);\n    }\n  }).sort((a, b) => a.localeCompare(b)).join(\",\");\n}\nfunction loadSerializedPanelGroupState(autoSaveId, storage) {\n  try {\n    const panelGroupKey = getPanelGroupKey(autoSaveId);\n    const serialized = storage.getItem(panelGroupKey);\n    if (serialized) {\n      const parsed = JSON.parse(serialized);\n      if (typeof parsed === \"object\" && parsed != null) {\n        return parsed;\n      }\n    }\n  } catch (error) {}\n  return null;\n}\nfunction savePanelGroupState(autoSaveId, panels, panelSizesBeforeCollapse, sizes, storage) {\n  var _loadSerializedPanelG2;\n  const panelGroupKey = getPanelGroupKey(autoSaveId);\n  const panelKey = getPanelKey(panels);\n  const state = (_loadSerializedPanelG2 = loadSerializedPanelGroupState(autoSaveId, storage)) !== null && _loadSerializedPanelG2 !== void 0 ? _loadSerializedPanelG2 : {};\n  state[panelKey] = {\n    expandToSizes: Object.fromEntries(panelSizesBeforeCollapse.entries()),\n    layout: sizes\n  };\n  try {\n    storage.setItem(panelGroupKey, JSON.stringify(state));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// All units must be in percentages; pixel values should be pre-converted\nfunction validatePanelGroupLayout({\n  layout: prevLayout,\n  panelConstraints\n}) {\n  const nextLayout = [...prevLayout];\n  const nextLayoutTotalSize = nextLayout.reduce((accumulated, current) => accumulated + current, 0);\n\n  // Validate layout expectations\n  if (nextLayout.length !== panelConstraints.length) {\n    throw Error(`Invalid ${panelConstraints.length} panel layout: ${nextLayout.map(size => `${size}%`).join(\", \")}`);\n  } else if (!fuzzyNumbersEqual(nextLayoutTotalSize, 100) && nextLayout.length > 0) {\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const unsafeSize = nextLayout[index];\n      assert(unsafeSize != null, `No layout data found for index ${index}`);\n      const safeSize = 100 / nextLayoutTotalSize * unsafeSize;\n      nextLayout[index] = safeSize;\n    }\n  }\n  let remainingSize = 0;\n\n  // First pass: Validate the proposed layout given each panel's constraints\n  for (let index = 0; index < panelConstraints.length; index++) {\n    const unsafeSize = nextLayout[index];\n    assert(unsafeSize != null, `No layout data found for index ${index}`);\n    const safeSize = resizePanel({\n      panelConstraints,\n      panelIndex: index,\n      size: unsafeSize\n    });\n    if (unsafeSize != safeSize) {\n      remainingSize += unsafeSize - safeSize;\n      nextLayout[index] = safeSize;\n    }\n  }\n\n  // If there is additional, left over space, assign it to any panel(s) that permits it\n  // (It's not worth taking multiple additional passes to evenly distribute)\n  if (!fuzzyNumbersEqual(remainingSize, 0)) {\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const prevSize = nextLayout[index];\n      assert(prevSize != null, `No layout data found for index ${index}`);\n      const unsafeSize = prevSize + remainingSize;\n      const safeSize = resizePanel({\n        panelConstraints,\n        panelIndex: index,\n        size: unsafeSize\n      });\n      if (prevSize !== safeSize) {\n        remainingSize -= safeSize - prevSize;\n        nextLayout[index] = safeSize;\n\n        // Once we've used up the remainder, bail\n        if (fuzzyNumbersEqual(remainingSize, 0)) {\n          break;\n        }\n      }\n    }\n  }\n  return nextLayout;\n}\n\nconst LOCAL_STORAGE_DEBOUNCE_INTERVAL = 100;\nconst defaultStorage = {\n  getItem: name => {\n    initializeDefaultStorage(defaultStorage);\n    return defaultStorage.getItem(name);\n  },\n  setItem: (name, value) => {\n    initializeDefaultStorage(defaultStorage);\n    defaultStorage.setItem(name, value);\n  }\n};\nconst debounceMap = {};\nfunction PanelGroupWithForwardedRef({\n  autoSaveId = null,\n  children,\n  className: classNameFromProps = \"\",\n  direction,\n  forwardedRef,\n  id: idFromProps = null,\n  onLayout = null,\n  keyboardResizeBy = null,\n  storage = defaultStorage,\n  style: styleFromProps,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  const groupId = useUniqueId(idFromProps);\n  const panelGroupElementRef = useRef(null);\n  const [dragState, setDragState] = useState(null);\n  const [layout, setLayout] = useState([]);\n  const forceUpdate = useForceUpdate();\n  const panelIdToLastNotifiedSizeMapRef = useRef({});\n  const panelSizeBeforeCollapseRef = useRef(new Map());\n  const prevDeltaRef = useRef(0);\n  const committedValuesRef = useRef({\n    autoSaveId,\n    direction,\n    dragState,\n    id: groupId,\n    keyboardResizeBy,\n    onLayout,\n    storage\n  });\n  const eagerValuesRef = useRef({\n    layout,\n    panelDataArray: [],\n    panelDataArrayChanged: false\n  });\n  useRef({\n    didLogIdAndOrderWarning: false,\n    didLogPanelConstraintsWarning: false,\n    prevPanelIds: []\n  });\n  useImperativeHandle(forwardedRef, () => ({\n    getId: () => committedValuesRef.current.id,\n    getLayout: () => {\n      const {\n        layout\n      } = eagerValuesRef.current;\n      return layout;\n    },\n    setLayout: unsafeLayout => {\n      const {\n        onLayout\n      } = committedValuesRef.current;\n      const {\n        layout: prevLayout,\n        panelDataArray\n      } = eagerValuesRef.current;\n      const safeLayout = validatePanelGroupLayout({\n        layout: unsafeLayout,\n        panelConstraints: panelDataArray.map(panelData => panelData.constraints)\n      });\n      if (!areEqual(prevLayout, safeLayout)) {\n        setLayout(safeLayout);\n        eagerValuesRef.current.layout = safeLayout;\n        if (onLayout) {\n          onLayout(safeLayout);\n        }\n        callPanelCallbacks(panelDataArray, safeLayout, panelIdToLastNotifiedSizeMapRef.current);\n      }\n    }\n  }), []);\n  useWindowSplitterPanelGroupBehavior({\n    committedValuesRef,\n    eagerValuesRef,\n    groupId,\n    layout,\n    panelDataArray: eagerValuesRef.current.panelDataArray,\n    setLayout,\n    panelGroupElement: panelGroupElementRef.current\n  });\n  useEffect(() => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n\n    // If this panel has been configured to persist sizing information, save sizes to local storage.\n    if (autoSaveId) {\n      if (layout.length === 0 || layout.length !== panelDataArray.length) {\n        return;\n      }\n      let debouncedSave = debounceMap[autoSaveId];\n\n      // Limit the frequency of localStorage updates.\n      if (debouncedSave == null) {\n        debouncedSave = debounce(savePanelGroupState, LOCAL_STORAGE_DEBOUNCE_INTERVAL);\n        debounceMap[autoSaveId] = debouncedSave;\n      }\n\n      // Clone mutable data before passing to the debounced function,\n      // else we run the risk of saving an incorrect combination of mutable and immutable values to state.\n      const clonedPanelDataArray = [...panelDataArray];\n      const clonedPanelSizesBeforeCollapse = new Map(panelSizeBeforeCollapseRef.current);\n      debouncedSave(autoSaveId, clonedPanelDataArray, clonedPanelSizesBeforeCollapse, layout, storage);\n    }\n  }, [autoSaveId, layout, storage]);\n\n  // DEV warnings\n  useEffect(() => {\n  });\n\n  // External APIs are safe to memoize via committed values ref\n  const collapsePanel = useCallback(panelData => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    if (panelData.constraints.collapsible) {\n      const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n      const {\n        collapsedSize = 0,\n        panelSize,\n        pivotIndices\n      } = panelDataHelper(panelDataArray, panelData, prevLayout);\n      assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n      if (!fuzzyNumbersEqual$1(panelSize, collapsedSize)) {\n        // Store size before collapse;\n        // This is the size that gets restored if the expand() API is used.\n        panelSizeBeforeCollapseRef.current.set(panelData.id, panelSize);\n        const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n        const delta = isLastPanel ? panelSize - collapsedSize : collapsedSize - panelSize;\n        const nextLayout = adjustLayoutByDelta({\n          delta,\n          initialLayout: prevLayout,\n          panelConstraints: panelConstraintsArray,\n          pivotIndices,\n          prevLayout,\n          trigger: \"imperative-api\"\n        });\n        if (!compareLayouts(prevLayout, nextLayout)) {\n          setLayout(nextLayout);\n          eagerValuesRef.current.layout = nextLayout;\n          if (onLayout) {\n            onLayout(nextLayout);\n          }\n          callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n        }\n      }\n    }\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const expandPanel = useCallback((panelData, minSizeOverride) => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    if (panelData.constraints.collapsible) {\n      const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n      const {\n        collapsedSize = 0,\n        panelSize = 0,\n        minSize: minSizeFromProps = 0,\n        pivotIndices\n      } = panelDataHelper(panelDataArray, panelData, prevLayout);\n      const minSize = minSizeOverride !== null && minSizeOverride !== void 0 ? minSizeOverride : minSizeFromProps;\n      if (fuzzyNumbersEqual$1(panelSize, collapsedSize)) {\n        // Restore this panel to the size it was before it was collapsed, if possible.\n        const prevPanelSize = panelSizeBeforeCollapseRef.current.get(panelData.id);\n        const baseSize = prevPanelSize != null && prevPanelSize >= minSize ? prevPanelSize : minSize;\n        const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n        const delta = isLastPanel ? panelSize - baseSize : baseSize - panelSize;\n        const nextLayout = adjustLayoutByDelta({\n          delta,\n          initialLayout: prevLayout,\n          panelConstraints: panelConstraintsArray,\n          pivotIndices,\n          prevLayout,\n          trigger: \"imperative-api\"\n        });\n        if (!compareLayouts(prevLayout, nextLayout)) {\n          setLayout(nextLayout);\n          eagerValuesRef.current.layout = nextLayout;\n          if (onLayout) {\n            onLayout(nextLayout);\n          }\n          callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n        }\n      }\n    }\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const getPanelSize = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return panelSize;\n  }, []);\n\n  // This API should never read from committedValuesRef\n  const getPanelStyle = useCallback((panelData, defaultSize) => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    const panelIndex = findPanelDataIndex(panelDataArray, panelData);\n    return computePanelFlexBoxStyle({\n      defaultSize,\n      dragState,\n      layout,\n      panelData: panelDataArray,\n      panelIndex\n    });\n  }, [dragState, layout]);\n\n  // External APIs are safe to memoize via committed values ref\n  const isPanelCollapsed = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize = 0,\n      collapsible,\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return collapsible === true && fuzzyNumbersEqual$1(panelSize, collapsedSize);\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const isPanelExpanded = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize = 0,\n      collapsible,\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return !collapsible || fuzzyCompareNumbers(panelSize, collapsedSize) > 0;\n  }, []);\n  const registerPanel = useCallback(panelData => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    panelDataArray.push(panelData);\n    panelDataArray.sort((panelA, panelB) => {\n      const orderA = panelA.order;\n      const orderB = panelB.order;\n      if (orderA == null && orderB == null) {\n        return 0;\n      } else if (orderA == null) {\n        return -1;\n      } else if (orderB == null) {\n        return 1;\n      } else {\n        return orderA - orderB;\n      }\n    });\n    eagerValuesRef.current.panelDataArrayChanged = true;\n    forceUpdate();\n  }, [forceUpdate]);\n  const registerResizeHandle = useCallback(dragHandleId => {\n    let isRTL = false;\n    const panelGroupElement = panelGroupElementRef.current;\n    if (panelGroupElement) {\n      const style = window.getComputedStyle(panelGroupElement, null);\n      if (style.getPropertyValue(\"direction\") === \"rtl\") {\n        isRTL = true;\n      }\n    }\n    return function resizeHandler(event) {\n      event.preventDefault();\n      const panelGroupElement = panelGroupElementRef.current;\n      if (!panelGroupElement) {\n        return () => null;\n      }\n      const {\n        direction,\n        dragState,\n        id: groupId,\n        keyboardResizeBy,\n        onLayout\n      } = committedValuesRef.current;\n      const {\n        layout: prevLayout,\n        panelDataArray\n      } = eagerValuesRef.current;\n      const {\n        initialLayout\n      } = dragState !== null && dragState !== void 0 ? dragState : {};\n      const pivotIndices = determinePivotIndices(groupId, dragHandleId, panelGroupElement);\n      let delta = calculateDeltaPercentage(event, dragHandleId, direction, dragState, keyboardResizeBy, panelGroupElement);\n      const isHorizontal = direction === \"horizontal\";\n      if (isHorizontal && isRTL) {\n        delta = -delta;\n      }\n      const panelConstraints = panelDataArray.map(panelData => panelData.constraints);\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        initialLayout: initialLayout !== null && initialLayout !== void 0 ? initialLayout : prevLayout,\n        panelConstraints,\n        pivotIndices,\n        prevLayout,\n        trigger: isKeyDown(event) ? \"keyboard\" : \"mouse-or-touch\"\n      });\n      const layoutChanged = !compareLayouts(prevLayout, nextLayout);\n\n      // Only update the cursor for layout changes triggered by touch/mouse events (not keyboard)\n      // Update the cursor even if the layout hasn't changed (we may need to show an invalid cursor state)\n      if (isPointerEvent(event) || isMouseEvent(event)) {\n        // Watch for multiple subsequent deltas; this might occur for tiny cursor movements.\n        // In this case, Panel sizes might not change–\n        // but updating cursor in this scenario would cause a flicker.\n        if (prevDeltaRef.current != delta) {\n          prevDeltaRef.current = delta;\n          if (!layoutChanged && delta !== 0) {\n            // If the pointer has moved too far to resize the panel any further, note this so we can update the cursor.\n            // This mimics VS Code behavior.\n            if (isHorizontal) {\n              reportConstraintsViolation(dragHandleId, delta < 0 ? EXCEEDED_HORIZONTAL_MIN : EXCEEDED_HORIZONTAL_MAX);\n            } else {\n              reportConstraintsViolation(dragHandleId, delta < 0 ? EXCEEDED_VERTICAL_MIN : EXCEEDED_VERTICAL_MAX);\n            }\n          } else {\n            reportConstraintsViolation(dragHandleId, 0);\n          }\n        }\n      }\n      if (layoutChanged) {\n        setLayout(nextLayout);\n        eagerValuesRef.current.layout = nextLayout;\n        if (onLayout) {\n          onLayout(nextLayout);\n        }\n        callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n      }\n    };\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const resizePanel = useCallback((panelData, unsafePanelSize) => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n    const {\n      panelSize,\n      pivotIndices\n    } = panelDataHelper(panelDataArray, panelData, prevLayout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n    const delta = isLastPanel ? panelSize - unsafePanelSize : unsafePanelSize - panelSize;\n    const nextLayout = adjustLayoutByDelta({\n      delta,\n      initialLayout: prevLayout,\n      panelConstraints: panelConstraintsArray,\n      pivotIndices,\n      prevLayout,\n      trigger: \"imperative-api\"\n    });\n    if (!compareLayouts(prevLayout, nextLayout)) {\n      setLayout(nextLayout);\n      eagerValuesRef.current.layout = nextLayout;\n      if (onLayout) {\n        onLayout(nextLayout);\n      }\n      callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n    }\n  }, []);\n  const reevaluatePanelConstraints = useCallback((panelData, prevConstraints) => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize: prevCollapsedSize = 0,\n      collapsible: prevCollapsible\n    } = prevConstraints;\n    const {\n      collapsedSize: nextCollapsedSize = 0,\n      collapsible: nextCollapsible,\n      maxSize: nextMaxSize = 100,\n      minSize: nextMinSize = 0\n    } = panelData.constraints;\n    const {\n      panelSize: prevPanelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    if (prevPanelSize == null) {\n      // It's possible that the panels in this group have changed since the last render\n      return;\n    }\n    if (prevCollapsible && nextCollapsible && fuzzyNumbersEqual$1(prevPanelSize, prevCollapsedSize)) {\n      if (!fuzzyNumbersEqual$1(prevCollapsedSize, nextCollapsedSize)) {\n        resizePanel(panelData, nextCollapsedSize);\n      }\n    } else if (prevPanelSize < nextMinSize) {\n      resizePanel(panelData, nextMinSize);\n    } else if (prevPanelSize > nextMaxSize) {\n      resizePanel(panelData, nextMaxSize);\n    }\n  }, [resizePanel]);\n\n  // TODO Multiple drag handles can be active at the same time so this API is a bit awkward now\n  const startDragging = useCallback((dragHandleId, event) => {\n    const {\n      direction\n    } = committedValuesRef.current;\n    const {\n      layout\n    } = eagerValuesRef.current;\n    if (!panelGroupElementRef.current) {\n      return;\n    }\n    const handleElement = getResizeHandleElement(dragHandleId, panelGroupElementRef.current);\n    assert(handleElement, `Drag handle element not found for id \"${dragHandleId}\"`);\n    const initialCursorPosition = getResizeEventCursorPosition(direction, event);\n    setDragState({\n      dragHandleId,\n      dragHandleRect: handleElement.getBoundingClientRect(),\n      initialCursorPosition,\n      initialLayout: layout\n    });\n  }, []);\n  const stopDragging = useCallback(() => {\n    setDragState(null);\n  }, []);\n  const unregisterPanel = useCallback(panelData => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    const index = findPanelDataIndex(panelDataArray, panelData);\n    if (index >= 0) {\n      panelDataArray.splice(index, 1);\n\n      // TRICKY\n      // When a panel is removed from the group, we should delete the most recent prev-size entry for it.\n      // If we don't do this, then a conditionally rendered panel might not call onResize when it's re-mounted.\n      // Strict effects mode makes this tricky though because all panels will be registered, unregistered, then re-registered on mount.\n      delete panelIdToLastNotifiedSizeMapRef.current[panelData.id];\n      eagerValuesRef.current.panelDataArrayChanged = true;\n      forceUpdate();\n    }\n  }, [forceUpdate]);\n  const context = useMemo(() => ({\n    collapsePanel,\n    direction,\n    dragState,\n    expandPanel,\n    getPanelSize,\n    getPanelStyle,\n    groupId,\n    isPanelCollapsed,\n    isPanelExpanded,\n    reevaluatePanelConstraints,\n    registerPanel,\n    registerResizeHandle,\n    resizePanel,\n    startDragging,\n    stopDragging,\n    unregisterPanel,\n    panelGroupElement: panelGroupElementRef.current\n  }), [collapsePanel, dragState, direction, expandPanel, getPanelSize, getPanelStyle, groupId, isPanelCollapsed, isPanelExpanded, reevaluatePanelConstraints, registerPanel, registerResizeHandle, resizePanel, startDragging, stopDragging, unregisterPanel]);\n  const style = {\n    display: \"flex\",\n    flexDirection: direction === \"horizontal\" ? \"row\" : \"column\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\"\n  };\n  return createElement(PanelGroupContext.Provider, {\n    value: context\n  }, createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: idFromProps,\n    ref: panelGroupElementRef,\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    // CSS selectors\n    [DATA_ATTRIBUTES.group]: \"\",\n    [DATA_ATTRIBUTES.groupDirection]: direction,\n    [DATA_ATTRIBUTES.groupId]: groupId\n  }));\n}\nconst PanelGroup = forwardRef((props, ref) => createElement(PanelGroupWithForwardedRef, {\n  ...props,\n  forwardedRef: ref\n}));\nPanelGroupWithForwardedRef.displayName = \"PanelGroup\";\nPanelGroup.displayName = \"forwardRef(PanelGroup)\";\nfunction findPanelDataIndex(panelDataArray, panelData) {\n  return panelDataArray.findIndex(prevPanelData => prevPanelData === panelData || prevPanelData.id === panelData.id);\n}\nfunction panelDataHelper(panelDataArray, panelData, layout) {\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData);\n  const isLastPanel = panelIndex === panelDataArray.length - 1;\n  const pivotIndices = isLastPanel ? [panelIndex - 1, panelIndex] : [panelIndex, panelIndex + 1];\n  const panelSize = layout[panelIndex];\n  return {\n    ...panelData.constraints,\n    panelSize,\n    pivotIndices\n  };\n}\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nfunction useWindowSplitterResizeHandlerBehavior({\n  disabled,\n  handleId,\n  resizeHandler,\n  panelGroupElement\n}) {\n  useEffect(() => {\n    if (disabled || resizeHandler == null || panelGroupElement == null) {\n      return;\n    }\n    const handleElement = getResizeHandleElement(handleId, panelGroupElement);\n    if (handleElement == null) {\n      return;\n    }\n    const onKeyDown = event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      switch (event.key) {\n        case \"ArrowDown\":\n        case \"ArrowLeft\":\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n        case \"End\":\n        case \"Home\":\n          {\n            event.preventDefault();\n            resizeHandler(event);\n            break;\n          }\n        case \"F6\":\n          {\n            event.preventDefault();\n            const groupId = handleElement.getAttribute(DATA_ATTRIBUTES.groupId);\n            assert(groupId, `No group element found for id \"${groupId}\"`);\n            const handles = getResizeHandleElementsForGroup(groupId, panelGroupElement);\n            const index = getResizeHandleElementIndex(groupId, handleId, panelGroupElement);\n            assert(index !== null, `No resize element found for id \"${handleId}\"`);\n            const nextIndex = event.shiftKey ? index > 0 ? index - 1 : handles.length - 1 : index + 1 < handles.length ? index + 1 : 0;\n            const nextHandle = handles[nextIndex];\n            nextHandle.focus();\n            break;\n          }\n      }\n    };\n    handleElement.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      handleElement.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [panelGroupElement, disabled, handleId, resizeHandler]);\n}\n\nfunction PanelResizeHandle({\n  children = null,\n  className: classNameFromProps = \"\",\n  disabled = false,\n  hitAreaMargins,\n  id: idFromProps,\n  onBlur,\n  onClick,\n  onDragging,\n  onFocus,\n  onPointerDown,\n  onPointerUp,\n  style: styleFromProps = {},\n  tabIndex = 0,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  var _hitAreaMargins$coars, _hitAreaMargins$fine;\n  const elementRef = useRef(null);\n\n  // Use a ref to guard against users passing inline props\n  const callbacksRef = useRef({\n    onClick,\n    onDragging,\n    onPointerDown,\n    onPointerUp\n  });\n  useEffect(() => {\n    callbacksRef.current.onClick = onClick;\n    callbacksRef.current.onDragging = onDragging;\n    callbacksRef.current.onPointerDown = onPointerDown;\n    callbacksRef.current.onPointerUp = onPointerUp;\n  });\n  const panelGroupContext = useContext(PanelGroupContext);\n  if (panelGroupContext === null) {\n    throw Error(`PanelResizeHandle components must be rendered within a PanelGroup container`);\n  }\n  const {\n    direction,\n    groupId,\n    registerResizeHandle: registerResizeHandleWithParentGroup,\n    startDragging,\n    stopDragging,\n    panelGroupElement\n  } = panelGroupContext;\n  const resizeHandleId = useUniqueId(idFromProps);\n  const [state, setState] = useState(\"inactive\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [resizeHandler, setResizeHandler] = useState(null);\n  const committedValuesRef = useRef({\n    state\n  });\n  useEffect(() => {\n    if (disabled) {\n      setResizeHandler(null);\n    } else {\n      const resizeHandler = registerResizeHandleWithParentGroup(resizeHandleId);\n      setResizeHandler(() => resizeHandler);\n    }\n  }, [disabled, resizeHandleId, registerResizeHandleWithParentGroup]);\n\n  // Extract hit area margins before passing them to the effect's dependency array\n  // so that inline object values won't trigger re-renders\n  const coarseHitAreaMargins = (_hitAreaMargins$coars = hitAreaMargins === null || hitAreaMargins === void 0 ? void 0 : hitAreaMargins.coarse) !== null && _hitAreaMargins$coars !== void 0 ? _hitAreaMargins$coars : 15;\n  const fineHitAreaMargins = (_hitAreaMargins$fine = hitAreaMargins === null || hitAreaMargins === void 0 ? void 0 : hitAreaMargins.fine) !== null && _hitAreaMargins$fine !== void 0 ? _hitAreaMargins$fine : 5;\n  useEffect(() => {\n    if (disabled || resizeHandler == null) {\n      return;\n    }\n    const element = elementRef.current;\n    assert(element, \"Element ref not attached\");\n    let didMove = false;\n    const setResizeHandlerState = (action, isActive, event) => {\n      if (!isActive) {\n        setState(\"inactive\");\n        return;\n      }\n      switch (action) {\n        case \"down\":\n          {\n            setState(\"drag\");\n            didMove = false;\n            assert(event, 'Expected event to be defined for \"down\" action');\n            startDragging(resizeHandleId, event);\n            const {\n              onDragging,\n              onPointerDown\n            } = callbacksRef.current;\n            onDragging === null || onDragging === void 0 ? void 0 : onDragging(true);\n            onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown();\n            break;\n          }\n        case \"move\":\n          {\n            const {\n              state\n            } = committedValuesRef.current;\n            didMove = true;\n            if (state !== \"drag\") {\n              setState(\"hover\");\n            }\n            assert(event, 'Expected event to be defined for \"move\" action');\n            resizeHandler(event);\n            break;\n          }\n        case \"up\":\n          {\n            setState(\"hover\");\n            stopDragging();\n            const {\n              onClick,\n              onDragging,\n              onPointerUp\n            } = callbacksRef.current;\n            onDragging === null || onDragging === void 0 ? void 0 : onDragging(false);\n            onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp();\n            if (!didMove) {\n              onClick === null || onClick === void 0 ? void 0 : onClick();\n            }\n            break;\n          }\n      }\n    };\n    return registerResizeHandle(resizeHandleId, element, direction, {\n      coarse: coarseHitAreaMargins,\n      fine: fineHitAreaMargins\n    }, setResizeHandlerState);\n  }, [coarseHitAreaMargins, direction, disabled, fineHitAreaMargins, registerResizeHandleWithParentGroup, resizeHandleId, resizeHandler, startDragging, stopDragging]);\n  useWindowSplitterResizeHandlerBehavior({\n    disabled,\n    handleId: resizeHandleId,\n    resizeHandler,\n    panelGroupElement\n  });\n  const style = {\n    touchAction: \"none\",\n    userSelect: \"none\"\n  };\n  return createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: idFromProps,\n    onBlur: () => {\n      setIsFocused(false);\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur();\n    },\n    onFocus: () => {\n      setIsFocused(true);\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus();\n    },\n    ref: elementRef,\n    role: \"separator\",\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    tabIndex,\n    // CSS selectors\n    [DATA_ATTRIBUTES.groupDirection]: direction,\n    [DATA_ATTRIBUTES.groupId]: groupId,\n    [DATA_ATTRIBUTES.resizeHandle]: \"\",\n    [DATA_ATTRIBUTES.resizeHandleActive]: state === \"drag\" ? \"pointer\" : isFocused ? \"keyboard\" : undefined,\n    [DATA_ATTRIBUTES.resizeHandleEnabled]: !disabled,\n    [DATA_ATTRIBUTES.resizeHandleId]: resizeHandleId,\n    [DATA_ATTRIBUTES.resizeHandleState]: state\n  });\n}\nPanelResizeHandle.displayName = \"PanelResizeHandle\";\n\nfunction usePanelGroupContext() {\n  const context = useContext(PanelGroupContext);\n  return {\n    direction: context === null || context === void 0 ? void 0 : context.direction,\n    groupId: context === null || context === void 0 ? void 0 : context.groupId\n  };\n}\n\nfunction getPanelElement(id, scope = document) {\n  const element = scope.querySelector(`[data-panel-id=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getPanelElementsForGroup(groupId, scope = document) {\n  return Array.from(scope.querySelectorAll(`[data-panel][data-panel-group-id=\"${groupId}\"]`));\n}\n\nfunction getIntersectingRectangle(rectOne, rectTwo, strict) {\n  if (!intersects(rectOne, rectTwo, strict)) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  return {\n    x: Math.max(rectOne.x, rectTwo.x),\n    y: Math.max(rectOne.y, rectTwo.y),\n    width: Math.min(rectOne.x + rectOne.width, rectTwo.x + rectTwo.width) - Math.max(rectOne.x, rectTwo.x),\n    height: Math.min(rectOne.y + rectOne.height, rectTwo.y + rectTwo.height) - Math.max(rectOne.y, rectTwo.y)\n  };\n}\n\nexport { DATA_ATTRIBUTES, Panel, PanelGroup, PanelResizeHandle, assert, customizeGlobalCursorStyles, disableGlobalCursorStyles, enableGlobalCursorStyles, getIntersectingRectangle, getPanelElement, getPanelElementsForGroup, getPanelGroupElement, getResizeHandleElement, getResizeHandleElementIndex, getResizeHandleElementsForGroup, getResizeHandlePanelIds, intersects, setNonce, usePanelGroupContext };\n","// src/use-kbd.ts\nimport { mapPropsVariants } from \"@heroui/system-rsc\";\nimport { kbd } from \"@heroui/theme\";\nimport { clsx, objectToDeps } from \"@heroui/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useKbd(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, kbd.variantKeys);\n  const { as, children, className, keys, title, classNames, ...otherProps } = props;\n  const Component = as || \"kbd\";\n  const slots = useMemo(\n    () => kbd({\n      ...variantProps\n    }),\n    [objectToDeps(variantProps)]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const keysToRender = typeof keys === \"string\" ? [keys] : Array.isArray(keys) ? keys : [];\n  const getKbdProps = (props2 = {}) => ({\n    ...otherProps,\n    ...props2,\n    className: clsx(slots.base({ class: clsx(baseStyles, props2.className) }))\n  });\n  return { Component, slots, classNames, title, children, keysToRender, getKbdProps };\n}\n\nexport {\n  useKbd\n};\n","import {\n  tv\n} from \"./chunk-TX3FPB7D.mjs\";\n\n// src/components/kbd.ts\nvar kbd = tv({\n  slots: {\n    base: [\n      \"px-1.5\",\n      \"py-0.5\",\n      \"inline-flex\",\n      \"space-x-0.5\",\n      \"rtl:space-x-reverse\",\n      \"items-center\",\n      \"font-sans\",\n      \"font-normal\",\n      \"text-center\",\n      \"text-small\",\n      \"shadow-small\",\n      \"bg-default-100\",\n      \"text-foreground-600\",\n      \"rounded-small\"\n    ],\n    abbr: \"no-underline\",\n    content: \"\"\n  },\n  variants: {},\n  defaultVariants: {}\n});\n\nexport {\n  kbd\n};\n","// src/utils.ts\nvar kbdKeysMap = {\n  command: \"\\u2318\",\n  shift: \"\\u21E7\",\n  ctrl: \"\\u2303\",\n  option: \"\\u2325\",\n  enter: \"\\u21B5\",\n  delete: \"\\u232B\",\n  escape: \"\\u238B\",\n  tab: \"\\u21E5\",\n  capslock: \"\\u21EA\",\n  up: \"\\u2191\",\n  right: \"\\u2192\",\n  down: \"\\u2193\",\n  left: \"\\u2190\",\n  pageup: \"\\u21DE\",\n  pagedown: \"\\u21DF\",\n  home: \"\\u2196\",\n  end: \"\\u2198\",\n  help: \"?\",\n  space: \"\\u2423\",\n  fn: \"Fn\",\n  win: \"\\u2318\",\n  alt: \"\\u2325\"\n};\nvar kbdKeysLabelMap = {\n  command: \"Command\",\n  shift: \"Shift\",\n  ctrl: \"Control\",\n  option: \"Option\",\n  enter: \"Enter\",\n  delete: \"Delete\",\n  escape: \"Escape\",\n  tab: \"Tab\",\n  capslock: \"Caps Lock\",\n  up: \"Up\",\n  right: \"Right\",\n  down: \"Down\",\n  left: \"Left\",\n  pageup: \"Page Up\",\n  pagedown: \"Page Down\",\n  home: \"Home\",\n  end: \"End\",\n  help: \"Help\",\n  space: \"Space\",\n  fn: \"Fn\",\n  win: \"Win\",\n  alt: \"Alt\"\n};\n\nexport {\n  kbdKeysMap,\n  kbdKeysLabelMap\n};\n","import {\n  useKbd\n} from \"./chunk-33JVVCIB.mjs\";\nimport {\n  kbdKeysLabelMap,\n  kbdKeysMap\n} from \"./chunk-ZWTE5ZFD.mjs\";\n\n// src/kbd.tsx\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@heroui/system-rsc\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Kbd = forwardRef((props, ref) => {\n  const { Component, children, slots, classNames, keysToRender, getKbdProps } = useKbd({\n    ...props\n  });\n  const keysContent = useMemo(() => {\n    return keysToRender.map((key) => /* @__PURE__ */ jsx(\n      \"abbr\",\n      {\n        className: slots.abbr({ class: classNames == null ? void 0 : classNames.abbr }),\n        title: kbdKeysLabelMap[key],\n        children: kbdKeysMap[key]\n      },\n      key\n    ));\n  }, [keysToRender]);\n  return /* @__PURE__ */ jsxs(Component, { ref, ...getKbdProps(), children: [\n    keysContent,\n    children && /* @__PURE__ */ jsx(\"span\", { className: slots.content({ class: classNames == null ? void 0 : classNames.content }), children })\n  ] });\n});\nKbd.displayName = \"HeroUI.Kbd\";\nvar kbd_default = Kbd;\n\nexport {\n  kbd_default\n};\n","import {\n  colorVariants\n} from \"./chunk-GQT3YUX3.mjs\";\nimport {\n  tv\n} from \"./chunk-TX3FPB7D.mjs\";\n\n// src/components/code.ts\nvar code = tv({\n  base: [\"px-2\", \"py-1\", \"h-fit\", \"font-mono\", \"font-normal\", \"inline-block\", \"whitespace-nowrap\"],\n  variants: {\n    color: {\n      default: colorVariants.flat.default,\n      primary: colorVariants.flat.primary,\n      secondary: colorVariants.flat.secondary,\n      success: colorVariants.flat.success,\n      warning: colorVariants.flat.warning,\n      danger: colorVariants.flat.danger\n    },\n    size: {\n      sm: \"text-small\",\n      md: \"text-medium\",\n      lg: \"text-large\"\n    },\n    radius: {\n      none: \"rounded-none\",\n      sm: \"rounded-small\",\n      md: \"rounded-medium\",\n      lg: \"rounded-large\",\n      full: \"rounded-full\"\n    }\n  },\n  defaultVariants: {\n    color: \"default\",\n    size: \"sm\",\n    radius: \"sm\"\n  }\n});\n\nexport {\n  code\n};\n","// src/use-code.ts\nimport { code } from \"@heroui/theme\";\nimport { mapPropsVariants } from \"@heroui/system-rsc\";\nimport { useMemo } from \"react\";\nimport { objectToDeps } from \"@heroui/shared-utils\";\nfunction useCode(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, code.variantKeys);\n  const { as, children, className, ...otherProps } = props;\n  const Component = as || \"code\";\n  const styles = useMemo(\n    () => code({\n      ...variantProps,\n      className\n    }),\n    [objectToDeps(variantProps), className]\n  );\n  const getCodeProps = () => {\n    return {\n      className: styles,\n      ...otherProps\n    };\n  };\n  return { Component, children, getCodeProps };\n}\n\nexport {\n  useCode\n};\n","import {\n  useCode\n} from \"./chunk-UDFNFZDA.mjs\";\n\n// src/code.tsx\nimport { forwardRef } from \"@heroui/system-rsc\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Code = forwardRef((props, ref) => {\n  const { Component, children, getCodeProps } = useCode({ ...props });\n  return /* @__PURE__ */ jsx(Component, { ref, ...getCodeProps(), children });\n});\nCode.displayName = \"HeroUI.Code\";\nvar code_default = Code;\n\nexport {\n  code_default\n};\n","\"use client\";\r\n\r\nimport {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {pdf, Document, Page, Text, View, Font} from \"@react-pdf/renderer\";\r\nimport {Panel, PanelGroup, PanelResizeHandle} from \"react-resizable-panels\";\r\nimport MRAFormOPD from \"@/components/RenderForm/MRAFormOPD\";\r\nimport MRAFormIPD from \"@/components/RenderForm/MRAFormIPD\";\r\nimport {Button} from \"@heroui/button\";\r\nimport {Switch} from \"@heroui/switch\";\r\nimport {Tooltip} from \"@heroui/tooltip\";\r\nimport {Kbd} from \"@heroui/kbd\";\r\nimport {Divider} from \"@heroui/divider\";\r\nimport {Code} from \"@heroui/code\";\r\nimport {Select, SelectItem} from \"@heroui/select\";\r\nimport {createTw} from \"react-pdf-tailwind\";\r\n\r\n/* ========== LocalStorage Keys ========== */\r\nconst LS_LEFT_SIZE = \"mra-pdf-dev-left-size\";\r\nconst LS_TEMPLATE = \"mra-pdf-dev-template\";\r\nconst LS_JSON_PREFIX = \"mra-pdf-dev-json-\"; // ต่อด้วยชื่อ template เช่น mra-pdf-dev-json-OPD\r\n\r\n/* ========== Font ========== */\r\ntry {\r\n  Font.register({\r\n    family: \"Sarabun\",\r\n    fonts: [\r\n      {src: \"/mra/fonts/sarabun_new/THSarabunNew.ttf\", fontWeight: \"normal\"},\r\n      {src: \"/mra/fonts/sarabun_new/THSarabunNew Bold.ttf\", fontWeight: \"bold\"},\r\n    ],\r\n  });\r\n} catch { /* dev hot-reload อาจ register ซ้ำได้ ไม่เป็นไร */ }\r\n\r\nconst tw = createTw({\r\n  theme: {\r\n    fontFamily: {sans: [\"Sarabun\"]},\r\n    extend: {colors: {custom: \"#bada55\"}},\r\n  },\r\n});\r\n\r\n/* ========== Coming soon placeholder ========== */\r\nconst ComingSoon = ({title = \"Coming soon…\"}) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={[tw(\"p-8 pt-5 font-sans text-base\"), {lineHeight: 1}]}>\r\n      <View>\r\n        <Text style={{fontSize: 32, fontWeight: \"bold\", lineHeight: 1}}>{title}</Text>\r\n        <Text style={{marginTop: 8, fontSize: 20, lineHeight: 1}}>\r\n          โปรดเตรียมคอมโพเนนต์สำหรับแบบฟอร์มนี้ แล้วมาแมปใน Dev Workbench ได้เลย\r\n        </Text>\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\n/* ========== Templates/Components ========== */\r\nconst TEMPLATE_OPTIONS = [\r\n  {key: \"OPD\", label: \"OPD (ปัจจุบัน)\"},\r\n  {key: \"IPD\", label: \"IPD (ปัจจุบัน)\"},\r\n  {key: \"ER\", label: \"ER (เผื่ออนาคต)\"},\r\n  {key: \"PSY-IPD\", label: \"PSY-IPD (เผื่ออนาคต)\"},\r\n  {key: \"PSY-OPD\", label: \"PSY-OPD (เผื่ออนาคต)\"},\r\n  {key: \"PSY-ER\", label: \"PSY-ER (เผื่ออนาคต)\"},\r\n];\r\n\r\nconst TEMPLATE_COMPONENTS = {\r\n  OPD: MRAFormOPD,\r\n  IPD: MRAFormIPD,\r\n  ER: (p) => <ComingSoon title=\"ER Form (Coming soon)\" {...p} />,\r\n  \"PSY-IPD\": (p) => <ComingSoon title=\"PSY-IPD Form (Coming soon)\" {...p} />,\r\n  \"PSY-OPD\": (p) => <ComingSoon title=\"PSY-OPD Form (Coming soon)\" {...p} />,\r\n  \"PSY-ER\": (p) => <ComingSoon title=\"PSY-ER Form (Coming soon)\" {...p} />,\r\n};\r\n\r\n/* ========== Preset registry: ไฟล์ JSON ของแต่ละฟอร์ม (วางใน /public/mra/presets) ========== */\r\nconst DATA_PRESETS = {\r\n  OPD: \"/mra/presets/opd.sample.json\",\r\n  IPD: \"/mra/presets/ipd.sample.json\",\r\n  ER: \"/mra/presets/er.sample.json\",\r\n  \"PSY-IPD\": \"/mra/presets/psy-ipd.sample.json\",\r\n  \"PSY-OPD\": \"/mra/presets/psy-opd.sample.json\",\r\n  \"PSY-ER\": \"/mra/presets/psy-er.sample.json\",\r\n};\r\n\r\n/* ถ้าไม่มี preset จริง ให้ใช้ object เปล่าเป็น fallback */\r\nconst EMPTY_FALLBACK = {};\r\n\r\nexport default function PdfDevWorkbench() {\r\n  /* ---------- state/editor ---------- */\r\n  const [template, setTemplate] = useState(\"OPD\");\r\n  const [raw, setRaw] = useState(\"\");       // ข้อความ JSON ใน editor\r\n  const [err, setErr] = useState(\"\");       // ข้อความ error ของ JSON\r\n  const [live, setLive] = useState(true);   // Live parse\r\n  const [rev, setRev] = useState(0);        // force refresh iframe\r\n\r\n  /* debounce input */\r\n  const [debouncedRaw, setDebouncedRaw] = useState(\"\");\r\n  const debounceRef = useRef(null);\r\n\r\n  /* iframe/render guards */\r\n  const [iframeUrl, setIframeUrl] = useState(null);\r\n  const lastUrlRef = useRef(null);\r\n  const renderIdRef = useRef(0);\r\n\r\n  /* layout memory */\r\n  const [defaultLeft, setDefaultLeft] = useState(34);\r\n\r\n  /* --------- init from storage --------- */\r\n  useEffect(() => {\r\n    try {\r\n      const savedLeft = Number(localStorage.getItem(LS_LEFT_SIZE));\r\n      if (savedLeft && savedLeft > 18 && savedLeft < 82) setDefaultLeft(savedLeft);\r\n\r\n      const savedTpl = localStorage.getItem(LS_TEMPLATE);\r\n      if (savedTpl && TEMPLATE_COMPONENTS[savedTpl]) {\r\n        setTemplate(savedTpl);\r\n      }\r\n    } catch {}\r\n  }, []);\r\n\r\n  /* เมื่อ template เปลี่ยน: โหลด JSON ของ template นั้น\r\n     1) ลองดึงจาก localStorage (ฉบับที่เราแก้ไว้)\r\n     2) ถ้าไม่มี ให้ fetch preset จาก public\r\n     3) ถ้า fetch พัง ใช้ EMPTY_FALLBACK */\r\n  useEffect(() => {\r\n    const key = LS_JSON_PREFIX + template;\r\n    let done = false;\r\n\r\n    const load = async () => {\r\n      try {\r\n        const saved = localStorage.getItem(key);\r\n        if (saved) {\r\n          setRaw(saved);\r\n          done = true;\r\n          return;\r\n        }\r\n      } catch {}\r\n      // ไม่มีใน localStorage → ลอง preset\r\n      const presetUrl = DATA_PRESETS[template];\r\n      if (presetUrl) {\r\n        try {\r\n          const res = await fetch(presetUrl, {cache: \"no-cache\"});\r\n          if (res.ok) {\r\n            const txt = await res.text();\r\n            setRaw(txt);\r\n            done = true;\r\n            return;\r\n          }\r\n        } catch {}\r\n      }\r\n      if (!done) setRaw(JSON.stringify(EMPTY_FALLBACK, null, 2));\r\n    };\r\n\r\n    load();\r\n    try { localStorage.setItem(LS_TEMPLATE, template); } catch {}\r\n  }, [template]);\r\n\r\n  /* autosave JSON แยกตาม template */\r\n  useEffect(() => {\r\n    if (!raw) return;\r\n    const t = setTimeout(() => {\r\n      try { localStorage.setItem(LS_JSON_PREFIX + template, raw); } catch {}\r\n    }, 300);\r\n    return () => clearTimeout(t);\r\n  }, [raw, template]);\r\n\r\n  /* debounce raw when live */\r\n  useEffect(() => {\r\n    if (!live) return;\r\n    if (debounceRef.current) clearTimeout(debounceRef.current);\r\n    debounceRef.current = setTimeout(() => setDebouncedRaw(raw), 600);\r\n    return () => {\r\n      if (debounceRef.current) clearTimeout(debounceRef.current);\r\n    };\r\n  }, [raw, live]);\r\n\r\n  /* parse JSON */\r\n  const parsed = useMemo(() => {\r\n    const src = live ? debouncedRaw : raw;\r\n    try {\r\n      const o = src.trim() ? JSON.parse(src) : {};\r\n      setErr(\"\");\r\n      return o;\r\n    } catch (e) {\r\n      setErr(e?.message ?? \"JSON parse error\");\r\n      return {};\r\n    }\r\n  }, [debouncedRaw, raw, live]);\r\n\r\n  /* last good object for smooth preview */\r\n  const lastGoodObjRef = useRef(EMPTY_FALLBACK);\r\n\r\n  const previewObj = useMemo(() => {\r\n    if (!err && live) {\r\n      lastGoodObjRef.current = parsed;\r\n      return parsed;\r\n    }\r\n    if (!live) return parsed;\r\n    return lastGoodObjRef.current;\r\n  }, [parsed, err, live]);\r\n\r\n  /* Ctrl/Cmd + S → Download */\r\n  useEffect(() => {\r\n    const h = (e) => {\r\n      const isMac = navigator.platform.toUpperCase().includes(\"MAC\");\r\n      if ((isMac ? e.metaKey : e.ctrlKey) && (e.key || \"\").toLowerCase() === \"s\") {\r\n        e.preventDefault();\r\n        handleDownload().catch(() => {});\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", h);\r\n    return () => window.removeEventListener(\"keydown\", h);\r\n  }, [template, previewObj]);\r\n\r\n  /* remember split sizes */\r\n  const onLayout = (sizes) => {\r\n    try { localStorage.setItem(LS_LEFT_SIZE, String(Math.round(sizes[0]))); } catch {}\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  /* Render → Blob → iframe */\r\n  const renderToIframe = async (forceObj = previewObj, forceTpl = template) => {\r\n    const CurrentComp = TEMPLATE_COMPONENTS[forceTpl] ?? MRAFormOPD;\r\n    const myId = ++renderIdRef.current;\r\n    try {\r\n      const blob = await pdf(<CurrentComp {...(forceObj || {})} />).toBlob();\r\n      if (renderIdRef.current !== myId) return;\r\n      const nextUrl = URL.createObjectURL(blob);\r\n      if (lastUrlRef.current) URL.revokeObjectURL(lastUrlRef.current);\r\n      lastUrlRef.current = nextUrl;\r\n      setIframeUrl(nextUrl);\r\n    } catch (e) {\r\n      console.error(\"PDF render error:\", e);\r\n      setIframeUrl(null);\r\n    }\r\n  };\r\n\r\n  /* re-render when template/previewObj/rev changed */\r\n  useEffect(() => {\r\n    renderToIframe();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [template, previewObj, rev]);\r\n\r\n  const formatTs = (d = new Date()) =>\r\n    `${d.getFullYear()}${String(d.getMonth() + 1).padStart(2, \"0\")}${String(d.getDate()).padStart(2, \"0\")}-${String(d.getHours()).padStart(2, \"0\")}${String(d.getMinutes()).padStart(2, \"0\")}`;\r\n\r\n  const handleDownload = async () => {\r\n    const CurrentComp = TEMPLATE_COMPONENTS[template] ?? MRAFormOPD;\r\n    try {\r\n      const blob = await pdf(<CurrentComp {...(previewObj || {})} />).toBlob();\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      const vn = previewObj?.patients?.patient_vn || previewObj?.patients?.patient_an || \"preview\";\r\n      a.href = url;\r\n      a.download = `MRA-${template}-${vn}-${formatTs()}.pdf`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(\"สร้างไฟล์ไม่สำเร็จ (ดู console)\");\r\n    }\r\n  };\r\n\r\n  /* cleanup blob url */\r\n  useEffect(() => {\r\n    return () => {\r\n      if (lastUrlRef.current) URL.revokeObjectURL(lastUrlRef.current);\r\n    };\r\n  }, []);\r\n\r\n  /* ====== Import/Export/Reset Preset helpers ====== */\r\n  const handleExportJson = () => {\r\n    try {\r\n      const blob = new Blob([raw || \"{}\"], {type: \"application/json\"});\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `MRA-${template}-data-${formatTs()}.json`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } catch {}\r\n  };\r\n\r\n  const handleImportJson = async (file) => {\r\n    if (!file) return;\r\n    try {\r\n      const txt = await file.text();\r\n      // validate\r\n      JSON.parse(txt);\r\n      setRaw(txt);\r\n      try { localStorage.setItem(LS_JSON_PREFIX + template, txt); } catch {}\r\n    } catch {\r\n      alert(\"ไฟล์ไม่ใช่ JSON ที่ถูกต้อง\");\r\n    }\r\n  };\r\n\r\n  const handleResetToPreset = async () => {\r\n    const presetUrl = DATA_PRESETS[template];\r\n    if (!presetUrl) {\r\n      setRaw(JSON.stringify(EMPTY_FALLBACK, null, 2));\r\n      return;\r\n    }\r\n    try {\r\n        console.log(presetUrl)\r\n      const res = await fetch(presetUrl, {cache: \"no-cache\"});\r\n      const txt = res.ok ? await res.text() : JSON.stringify(EMPTY_FALLBACK, null, 2);\r\n      setRaw(txt);\r\n      try { localStorage.setItem(LS_JSON_PREFIX + template, txt); } catch {}\r\n    } catch {\r\n      setRaw(JSON.stringify(EMPTY_FALLBACK, null, 2));\r\n    }\r\n  };\r\n\r\n  /* hidden file input for import */\r\n  const fileRef = useRef(null);\r\n\r\n  return (\r\n    <div className=\"h-[calc(100vh)] p-3\">\r\n      <div className=\"h-full rounded-2xl border border-zinc-300 dark:border-[#505050] bg-white dark:bg-[#181818] shadow-lg overflow-hidden\">\r\n        {/* Toolbar */}\r\n        <div className=\"flex items-center justify-between px-3 py-2 border-b border-zinc-300 dark:border-[#505050]\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"h-6 w-6 rounded-full grid place-items-center text-xs font-semibold text-white bg-emerald-600 shadow-sm\">M</span>\r\n            <p className=\"font-semibold tracking-tight\">MRA • PDF Dev Preview</p>\r\n            <Divider orientation=\"vertical\" className=\"mx-2 h-5\" />\r\n\r\n            <Select\r\n              aria-label=\"เลือกชนิดเอกสาร\"\r\n              selectedKeys={new Set([template])}\r\n              onSelectionChange={(keys) => {\r\n                const v = [...keys][0];\r\n                if (v && TEMPLATE_COMPONENTS[v]) setTemplate(v);\r\n              }}\r\n              size=\"sm\"\r\n              className=\"w-[240px]\"\r\n              variant=\"bordered\"\r\n            >\r\n              {TEMPLATE_OPTIONS.map((opt) => (\r\n                <SelectItem key={opt.key} value={opt.key}>\r\n                  {opt.label}\r\n                </SelectItem>\r\n              ))}\r\n            </Select>\r\n\r\n            {/* <Switch size=\"sm\" isSelected={live} onValueChange={setLive} color=\"success\" className=\"ml-2\">\r\n              Live\r\n            </Switch> */}\r\n\r\n            {err ? (\r\n              <Code color=\"danger\" size=\"sm\" className=\"ml-2\">JSON error</Code>\r\n            ) : (\r\n              <Code color=\"success\" size=\"sm\" className=\"ml-2\">JSON OK</Code>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            <input\r\n              ref={fileRef}\r\n              type=\"file\"\r\n              accept=\"application/json\"\r\n              hidden\r\n              onChange={(e) => handleImportJson(e.target.files?.[0])}\r\n            />\r\n\r\n            <Tooltip content=\"นำเข้าข้อมูล JSON สำหรับฟอร์มนี้\">\r\n              <Button size=\"sm\" variant=\"flat\" onPress={() => fileRef.current?.click()}>\r\n                Import JSON\r\n              </Button>\r\n            </Tooltip>\r\n\r\n            <Tooltip content=\"บันทึกชุดข้อมูล JSON ที่กำลังแก้\">\r\n              <Button size=\"sm\" variant=\"flat\" onPress={handleExportJson}>\r\n                Export JSON\r\n              </Button>\r\n            </Tooltip>\r\n\r\n            <Tooltip content=\"โหลด preset ของฟอร์มนี้จาก /public/mra/presets\">\r\n              <Button size=\"sm\" variant=\"flat\" color=\"secondary\" onPress={handleResetToPreset}>\r\n                Reset to Preset\r\n              </Button>\r\n            </Tooltip>\r\n\r\n            <Tooltip content=\"รีเฟรชฝั่งพรีวิว\">\r\n              <Button size=\"sm\" variant=\"flat\" onPress={handleRefresh}>Refresh</Button>\r\n            </Tooltip>\r\n\r\n            <Tooltip content={<p>ดาวน์โหลด <Kbd>Ctrl</Kbd>/<Kbd>⌘</Kbd>+<Kbd>S</Kbd></p>}>\r\n              <Button size=\"sm\" color=\"success\" onPress={handleDownload}>Download</Button>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Workspace Split */}\r\n        <PanelGroup direction=\"horizontal\" onLayout={onLayout} className=\"h-[calc(100vh-48px)]\">\r\n          {/* LEFT: JSON */}\r\n          <Panel defaultSize={defaultLeft} minSize={20}>\r\n            <div className=\"h-[calc(100vh-8vh)] flex flex-col\">\r\n              <div className=\"p-3\">\r\n                <p className=\"text-xs text-zinc-600 dark:text-zinc-400\">\r\n                  ชุดข้อมูลของฟอร์ม <span className=\"font-semibold\">{template}</span> จะถูกเก็บแยกในเบราว์เซอร์\r\n                  (localStorage) และมีไฟล์ preset ให้โหลดกลับได้ ถ้ารื้อจนพัง\r\n                </p>\r\n              </div>\r\n              <div className=\"px-3 pb-3 mb-4 h-full\">\r\n                <textarea\r\n                  value={raw}\r\n                  onChange={(e) => setRaw(e.target.value)}\r\n                  spellCheck={false}\r\n                  className=\"w-full resize-none h-full font-mono text-[12.5px] leading-5 p-3 rounded-xl border border-zinc-300 dark:border-[#505050] outline-none focus:ring-1 focus:ring-emerald-500 bg-white dark:bg-[#111111] text-zinc-800 dark:text-zinc-100\"\r\n                />\r\n              </div>\r\n              <div className=\"px-3 py-2 text-[11px] text-zinc-600 dark:text-zinc-400 border-t border-zinc-200 dark:border-[#404040] flex justify-between\">\r\n                <span>\r\n                  สถานะ: {err ? <span className=\"text-rose-600\">ผิดรูปแบบ JSON</span> : <span className=\"text-emerald-700 dark:text-emerald-400\">พร้อมพรีวิว</span>}\r\n                </span>\r\n                <span className=\"italic\">\r\n                  {live ? \"Live preview ON\" : \"Live preview OFF\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </Panel>\r\n\r\n          {/* Handle */}\r\n          <PanelResizeHandle className=\"w-0.5 relative group hover:bg-[#D4D4D8] active:bg-[#D4D4D8] dark:hover:bg-[#505050] dark:active:bg-[#505050]\">\r\n            <div className=\"absolute inset-y-0 -left-0.5 right-0 mx-auto my-auto h-10 w-1.5 rounded-full bg-zinc-200 dark:bg-zinc-600 group-hover:bg-[#D4D4D8] transition-colors\" />\r\n            <div className=\"absolute left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2 grid gap-1\">\r\n              <span className=\"h-1 w-1 rounded-full bg-zinc-400/70\"></span>\r\n              <span className=\"h-1 w-1 rounded-full bg-zinc-400/70\"></span>\r\n              <span className=\"h-1 w-1 rounded-full bg-zinc-400/70\"></span>\r\n            </div>\r\n          </PanelResizeHandle>\r\n\r\n          {/* RIGHT: Preview */}\r\n          <Panel minSize={30}>\r\n            <div className=\"h-full rounded-none\">\r\n              {!iframeUrl ? (\r\n                <div className=\"h-full grid place-items-center text-sm text-zinc-600 dark:text-zinc-400\">\r\n                  กำลังสร้างเอกสาร หรือยังไม่มี URL แสดงผล…\r\n                </div>\r\n              ) : (\r\n                <iframe\r\n                  key={rev}\r\n                  title=\"MRA PDF preview\"\r\n                  src={iframeUrl}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  className=\"w-full h-full\"\r\n                  style={{border: 0}}\r\n                />\r\n              )}\r\n            </div>\r\n          </Panel>\r\n        </PanelGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7]}